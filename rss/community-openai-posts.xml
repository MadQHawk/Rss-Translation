<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>OpenAI 开发者论坛 - 最新帖子</title>
    <link>https://community.openai.com</link>
    <description>最新帖子</description>
    <lastBuildDate>Tue, 28 May 2024 12:34:57 GMT</lastBuildDate>
    <item>
      <title>将 json 上传到矢量存储时出错</title>
      <link>https://community.openai.com/t/error-when-uploading-json-to-vector-store/754688#post_4</link>
      <description><![CDATA[您可以将 JSON 转换为可识别的文本文件，其中包含一些更纯文本的页眉和页脚，也可以是有关文件的一些元数据，以使其更有用。这应该允许检查员将其分类为纯文本。]]></description>
      <guid>https://community.openai.com/t/error-when-uploading-json-to-vector-store/754688#post_4</guid>
      <pubDate>Tue, 28 May 2024 12:31:30 GMT</pubDate>
    </item>
    <item>
      <title>我想在chatgpt中上传pdf文件并一次性要求其摘要？</title>
      <link>https://community.openai.com/t/i-want-to-upload-pdf-file-in-chatgpt-and-ask-for-a-summary-of-it-in-one-go/783508#post_2</link>
      <description><![CDATA[唯一的内置方法是从上传的文件创建矢量存储，这为 AI 提供了文件搜索方法以返回文档的相关块。这仅适用于需要在多个步骤中调用更多 API 的“助手”。
如果您想一次性完全理解 PDF 文本，并且需要进行简单的调用，则需要在代码中使用自己的文档提取，并使用聊天补全功能来发送消息并在文本出现时立即得到答复。包含在要回答的消息中。
文本必须适合模型的输入上下文窗口，或者您还必须实现自己的分块和基于嵌入的搜索，以减少发送到 AI 的大小。]]></description>
      <guid>https://community.openai.com/t/i-want-to-upload-pdf-file-in-chatgpt-and-ask-for-a-summary-of-it-in-one-go/783508#post_2</guid>
      <pubDate>Tue, 28 May 2024 12:27:29 GMT</pubDate>
    </item>
    <item>
      <title>我想在chatgpt中上传pdf文件并一次性要求其摘要？</title>
      <link>https://community.openai.com/t/i-want-to-upload-pdf-file-in-chatgpt-and-ask-for-a-summary-of-it-in-one-go/783508#post_1</link>
      <description><![CDATA[我需要上传一个 PDF 文件并一次性询问有关该文件的问题，但我发现的都是单独的 API
一个用于上传文件，另一个用于将此文件 ID 与商店关联
和其他人将此与援助联系起来
这太多了吗？有没有更简单的方法？
还有可用的 C# 代码吗？]]></description>
      <guid>https://community.openai.com/t/i-want-to-upload-pdf-file-in-chatgpt-and-ask-for-a-summary-of-it-in-one-go/783508#post_1</guid>
      <pubDate>Tue, 28 May 2024 12:22:04 GMT</pubDate>
    </item>
    <item>
      <title>基于所选层的 Tts-1 和 tts-1-hd API RPM 和 RPD</title>
      <link>https://community.openai.com/t/tts-1-tts-1-hd-api-rpm-and-rpd-based-on-chosen-tier/783207#post_2</link>
      <description><![CDATA[等级取决于您的组织之前支付的费用。
第 1 层的限制（已预付最低金额）仅限于每分钟的请求数。发出超过限制的请求（或同时调用所有请求），您将收到 API 错误。
这是限制的链接，以及有关费率的更多文档链接：
https://platform.openai.com/docs/guides/rate-limits/usage-tiers?context=tier-one
您可以使用自己的策略来管理您进行的 API 调用数量，以使其保持在允许的数量以下。]]></description>
      <guid>https://community.openai.com/t/tts-1-tts-1-hd-api-rpm-and-rpd-based-on-chosen-tier/783207#post_2</guid>
      <pubDate>Tue, 28 May 2024 12:21:51 GMT</pubDate>
    </item>
    <item>
      <title>使用 gpt-4 API 对文档进行语义分块</title>
      <link>https://community.openai.com/t/using-gpt-4-api-to-semantically-chunk-documents/715689?page=5#post_89</link>
      <description><![CDATA[您不再在前面添加行号了吗？如果它只返回开始行和结束行，您不应该遇到任何输出标记限制，从而提高可靠性（不再有未完成的 json 对象）。
open ai api 返回的对象包含停止原因。您可以使用它进行错误处理（如果由于令牌限制而停止，它将是“长度”，请参阅此处的文档：https://platform.openai.com/docs/guides/text- Generation/chat-c​​ompletions-api)。]]></description>
      <guid>https://community.openai.com/t/using-gpt-4-api-to-semantically-chunk-documents/715689?page=5#post_89</guid>
      <pubDate>Tue, 28 May 2024 12:20:21 GMT</pubDate>
    </item>
    <item>
      <title>由于 Assistant API 服务器错误，Playground 无法工作</title>
      <link>https://community.openai.com/t/playground-not-working-due-to-assistant-api-server-error/699467#post_6</link>
      <description><![CDATA[我们有 2 个帐户。在其中之一中，我们发现其中一名助手在读取 API 时出现错误。在这种情况下，我清除了助理指令（通过API，因为读取不起作用，但更新起作用）
在我们的第二个帐户中，我们没有找到“坏”助手，因此我们仍然没有找到解决方案。支持人员只告诉我他们会向我提供解决方案（已经过去 2 个月了……）]]></description>
      <guid>https://community.openai.com/t/playground-not-working-due-to-assistant-api-server-error/699467#post_6</guid>
      <pubDate>Tue, 28 May 2024 12:13:18 GMT</pubDate>
    </item>
    <item>
      <title>https://openai.com/gptbot-ranges.txt 上的 WAF 保护 - 403 禁止</title>
      <link>https://community.openai.com/t/waf-protection-on-https-openai-com-gptbot-ranges-txt-403-forbidden/783447#post_2</link>
      <description><![CDATA[以下是使用人类 Firefox 的 get-a-round：
from selenium import webdriver
from selenium.webdriver.firefox.options import Options

url = &quot;https://openai.com/gptbot-ranges.txt&quot;

# 设置无头 Firefox 浏览器
options = Options()
options.headless = True

# 替换为 geckodriver 的路径
driver = webdriver.Firefox(options=options,)

try:
driver.get(url)
content = driver.page_source
print(content)
finally:
driver.quit()

尽管外观简单，但仍可获取 HTML：
&lt;html&gt;&lt;head&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;resource://content-accessible/plaintext.css&quot;&gt;&lt;/head&gt;&lt;body&gt;&lt;pre&gt;52.230.152.0/24
52.233.106.0/24
&lt;/pre&gt;&lt;/body&gt;&lt;/html&gt;

您可能必须先导航到 platform.openai.com 以获取所有 cookie。]]></description>
      <guid>https://community.openai.com/t/waf-protection-on-https-openai-com-gptbot-ranges-txt-403-forbidden/783447#post_2</guid>
      <pubDate>Tue, 28 May 2024 12:12:11 GMT</pubDate>
    </item>
    <item>
      <title>助理线程创建：400：消息数组太长</title>
      <link>https://community.openai.com/t/assistant-threads-create-400-messages-array-too-long/754574#post_2</link>
      <description><![CDATA[我也遇到了同样的麻烦。最令人沮丧的是这个限制没有在任何地方记录。]]></description>
      <guid>https://community.openai.com/t/assistant-threads-create-400-messages-array-too-long/754574#post_2</guid>
      <pubDate>Tue, 28 May 2024 12:10:56 GMT</pubDate>
    </item>
    </channel>
</rss>