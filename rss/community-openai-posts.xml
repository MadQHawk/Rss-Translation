<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>OpenAI 开发者论坛 - 最新帖子</title>
    <link>https://community.openai.com</link>
    <description>最新帖子</description>
    <lastBuildDate>Fri, 05 Apr 2024 21:16:46 GMT</lastBuildDate>
    <item>
      <title>当提示被阻止（被狗）时，Bing (DALL-E3) 上的提升会减少</title>
      <link>https://community.openai.com/t/boosts-on-bing-dall-e3-decreased-when-a-prompt-is-blocked-by-the-dog/708809#post_1</link>
      <description><![CDATA[大家好！
以前是这样，这样每当可怕的狗突然出现告诉你“不安全”内容时，你的提升计数就不会受到影响 - 计数保持不变。但最近，即使是被阻止的提示也有所改善。
这是非常不公平的 - 如果系统认为通过完全无害的提示创建了“不安全”内容，用户将无能为力。
这个问题可以解决吗？
问候，
梅布尔琥珀
PS - 我找不到相关标签，例如“Bing Copilot”，所以我将其标记为“API”
对于可能造成混乱表示歉意。]]></description>
      <guid>https://community.openai.com/t/boosts-on-bing-dall-e3-decreased-when-a-prompt-is-blocked-by-the-dog/708809#post_1</guid>
      <pubDate>Fri, 05 Apr 2024 21:14:30 GMT</pubDate>
    </item>
    <item>
      <title>创建 JSON 对象时，API 与非 API 结果非常不准确</title>
      <link>https://community.openai.com/t/api-vs-non-api-results-are-horribly-inaccurate-creating-json-objects/708767#post_5</link>
      <description><![CDATA[我也只是尝试自己进行简单的实验。以下提示对我有用。您仍然需要合并一些其他元素。
{
    “型号”：“gpt-4”，
    “消息”：[
        {
            “角色”：“用户”，
            &quot;content&quot;: &quot;为您提供了一个数据集。您的任务是将数据集转换为定义的 JSON 格式。您的输出必须严格仅包含指定 JSON 格式的 JSON。JSON 格式: [{firstname: value for fname},{lastname: lname 的值},{dob: 出生日期（日期格式）}; Data: 数据的占位符&quot;
        }
    ]
}

结果：
[{“名字”：“约翰”}，{“姓氏”：“doe”}，{“dob”：“2000-01-01”}]]]></description>
      <guid>https://community.openai.com/t/api-vs-non-api-results-are-horribly-inaccurate-creating-json-objects/708767#post_5</guid>
      <pubDate>Fri, 05 Apr 2024 21:11:53 GMT</pubDate>
    </item>
    <item>
      <title>创建 JSON 对象时，API 与非 API 结果非常不准确</title>
      <link>https://community.openai.com/t/api-vs-non-api-results-are-horribly-inaccurate-creating-json-objects/708767#post_4</link>
      <description><![CDATA[


 ABDevNY：
&lt;块引用&gt;
使用此数据：{data}，使其符合此 JSON 模板。 {模板字符串}。不要向 json 添加任何额外的注释或注释。将所有非空值括在标准双引号中。


这是一个提示问题。您将数据与指令混合在一起，并且可能没有使用系统消息来调整 AI 以标准化方式执行任务。
只是为了让您开始编写聊天 AI 来完成任务：
&lt;块引用&gt;
system：您是 JSONbot，一个 json 数据提取器和重写器，它执行与简单 python 脚本对数据执行的相同任务（如果数据格式始终相同）。
AI 任务：从列出的数据元素中提取实体，并使用以下键将它们重现为有效的 JSON：[&quot;firstname&quot;, &quot;lastname&quot;, &quot;dob&quot;]。如果项目的实体数据不完整或缺失，请使用 null JSON 数据类型。
响应：输出将仅是 JSON，没有其他闲聊。

&lt;块引用&gt;
用户：从此文本中提取 JSON 数据：
{我的数据}
]]></description>
      <guid>https://community.openai.com/t/api-vs-non-api-results-are-horribly-inaccurate-creating-json-objects/708767#post_4</guid>
      <pubDate>Fri, 05 Apr 2024 21:11:50 GMT</pubDate>
    </item>
    <item>
      <title>流媒体现已在 Assistant API 中提供！</title>
      <link>https://community.openai.com/t/streaming-is-now-available-in-the-assistants-api/682011?page=3#post_44</link>
      <description><![CDATA[嗨 hq1 - 查看 OpenAI Assistant 入门套件，其中演示了如何将 Assistant Streaming 与 NextJS 应用结合使用。
此处为实时应用程序： https://openai- Assistant-starter-kit.vercel.app/
博客演练此处： 使用 OpenAI Assistant 入门套件快速构建新的 OpenAI 应用 - OpenAI 博客 - Stephen Walther 谈 OpenAI
完整源代码在这里：  openai-assistant-starter-kit,使用 NextJS + ReactJS + TypeScript 创建 OpenAI Assistant Web 应用程序的入门套件,下载openai-assistant-starter-kit的源码_GitHub_酷徒
应用程序从服务器流式传输，然后解析出 ReactJS 组件中的服务器端事件。我没有使用任何特殊的库。欢迎并赞赏反馈！]]></description>
      <guid>https://community.openai.com/t/streaming-is-now-available-in-the-assistants-api/682011?page=3#post_44</guid>
      <pubDate>Fri, 05 Apr 2024 21:00:56 GMT</pubDate>
    </item>
    <item>
      <title>助理 API 令牌使用情况 - promt_tokens 使用率过高</title>
      <link>https://community.openai.com/t/assistant-api-token-usage-promt-tokens-usage-is-too-high/702512#post_6</link>
      <description><![CDATA[您检查过全新线程中的令牌使用情况吗？我开始为每个用户的请求创建新线程，现在令牌使用量稳定且较少]]></description>
      <guid>https://community.openai.com/t/assistant-api-token-usage-promt-tokens-usage-is-too-high/702512#post_6</guid>
      <pubDate>Fri, 05 Apr 2024 20:51:02 GMT</pubDate>
    </item>
    <item>
      <title>创建 JSON 对象时，API 与非 API 结果非常不准确</title>
      <link>https://community.openai.com/t/api-vs-non-api-results-are-horribly-inaccurate-creating-json-objects/708767#post_3</link>
      <description><![CDATA[嗨，
谢谢。我会尝试这些建议。
一个]]></description>
      <guid>https://community.openai.com/t/api-vs-non-api-results-are-horribly-inaccurate-creating-json-objects/708767#post_3</guid>
      <pubDate>Fri, 05 Apr 2024 20:50:52 GMT</pubDate>
    </item>
    <item>
      <title>创建 JSON 对象时，API 与非 API 结果非常不准确</title>
      <link>https://community.openai.com/t/api-vs-non-api-results-are-horribly-inaccurate-creating-json-objects/708767#post_2</link>
      <description><![CDATA[您好，欢迎来到论坛！
我在这里考虑几个选择：


使用少量方法，除了您提供的模板之外，还为模型提供几个所需 JSON 的示例。


创建微调模型。


除了这两个选项之外，我还建议对提示本身进行一些改进，例如强化输出必须严格遵循定义的 JSON 模板的措辞，并将实际数据和 JSON 模板放在提示的末尾或开头，而不是与指令混合在一起。
最后，根据我自己的经验，我可以说不同的模型在以 JSON 格式响应时有不同的怪癖。因此，您可能需要根据模型区分您遇到的问题，然后满足您的提示和/或您向相关模型提供的示例。]]></description>
      <guid>https://community.openai.com/t/api-vs-non-api-results-are-horribly-inaccurate-creating-json-objects/708767#post_2</guid>
      <pubDate>Fri, 05 Apr 2024 20:34:56 GMT</pubDate>
    </item>
    <item>
      <title>Oembed + 如果提供了 chatURL，则嵌入 api 的历史聊天记录</title>
      <link>https://community.openai.com/t/oembed-historical-chat-for-api-embedded-if-the-chaturl-is-provided/708790#post_1</link>
      <description><![CDATA[我想知道，因为 chatGPT 现在无需登录，并且用户已经可以嵌入他们已经进行过的聊天......
openAI 开发者能否实现类似于 YouTube 和 Twitter 使用 oembed API 的功能？
这将解决 api 嵌入问题并提供可增加 OpenAI 市场份额的免费服务。
我该如何使用它？
我的网站生成趋势新闻列表并根据实时数据生成标签建议，以及嵌入谷歌趋势图表选项、视频嵌入选项等。我可以为用户提供趋势聊天，以提交有效的 oembed url 并使用 gpt 作为用户讨论通过发布他们的 GPT 研究对话来使用工具。
我将嵌入基本详细信息和原始提示+前 100 个字符的响应，并有一个“在 ChatGPT 中查看完整响应”按钮...类似于我已有的“在 YouTube 上查看”或“在 Amazon 上查看”按钮。&lt; /p&gt;
此外，我可以尝试使用 PHP ob_start() 并使用嵌入代码、解析变量等。oembed 的目的是让编码人员可以使用他们选择的嵌入来推广 ypur 站点，而不需要 api，因为您正在控制基于输出的输出在提供的已“公开”的有效聊天 URL 上。
想法？]]></description>
      <guid>https://community.openai.com/t/oembed-historical-chat-for-api-embedded-if-the-chaturl-is-provided/708790#post_1</guid>
      <pubDate>Fri, 05 Apr 2024 20:28:22 GMT</pubDate>
    </item>
    <item>
      <title>通过流式传输进行函数调用的帮助</title>
      <link>https://community.openai.com/t/help-for-function-calls-with-streaming/627170#post_8</link>
      <description><![CDATA[]]></description>
      <guid>https://community.openai.com/t/help-for-function-calls-with-streaming/627170#post_8</guid>
      <pubDate>Fri, 05 Apr 2024 20:23:11 GMT</pubDate>
    </item>
    <item>
      <title>有人可以帮助我（微调）</title>
      <link>https://community.openai.com/t/can-someone-help-me-with-fine-tuning/491368#post_13</link>
      <description><![CDATA[如前所述，如果您提供实际示例而不仅仅是逻辑，则最容易进行故障排除。
你的助手消息/输出是 JSON 对象吗？]]></description>
      <guid>https://community.openai.com/t/can-someone-help-me-with-fine-tuning/491368#post_13</guid>
      <pubDate>Fri, 05 Apr 2024 20:17:44 GMT</pubDate>
    </item>
    <item>
      <title>微调模型上的内部服务器错误</title>
      <link>https://community.openai.com/t/internal-server-error-on-fine-tuned-model/611048#post_3</link>
      <description><![CDATA[我也面临这个问题 - 有没有人找到解决方案？]]></description>
      <guid>https://community.openai.com/t/internal-server-error-on-fine-tuned-model/611048#post_3</guid>
      <pubDate>Fri, 05 Apr 2024 20:16:51 GMT</pubDate>
    </item>
    <item>
      <title>有人可以帮助我（微调）</title>
      <link>https://community.openai.com/t/can-someone-help-me-with-fine-tuning/491368#post_12</link>
      <description><![CDATA[我有同样的问题。上传训练文件时，我收到有关文件格式如何的错误，但我按照每行一个非常简单的文件的说明进行操作，基本上是
cine name 电影院名称
显示电影名称
价格价格
等等]]></description>
      <guid>https://community.openai.com/t/can-someone-help-me-with-fine-tuning/491368#post_12</guid>
      <pubDate>Fri, 05 Apr 2024 20:15:46 GMT</pubDate>
    </item>
    <item>
      <title>具有流式传输的多个函数调用</title>
      <link>https://community.openai.com/t/multiple-function-calls-with-streaming/594052#post_7</link>
      <description><![CDATA[是的！我试图自己解决这个问题，但找不到任何资源，因此我自己实现了。
&lt;块引用&gt;
函数调用片段

第 1 步：将对话和可用功能发送给模型
&lt;块引用&gt;
stream_response1 = 等待 client.chat.completions.create(
    模型=DEPLOYMENT_NAME，
    消息=消息，
    工具=get_tools(),
    tool_choice =“自动”，
    温度=0.1，
    顶部_p=0.95，
    最大令牌=4096，
    流=真
）

# 将流响应转换为列表
Stream_response1_list = [stream_response1 中的项目异步]

tool_calls = [] # 用于稍后处理的工具调用的累加器；
full_delta_content = &quot;&quot; # 增量内容的累加器以便稍后处理


处理工具调用和增量内容的流响应
这会迭代构建增量内容的流以及要进行的工具调用。
&lt;块引用&gt;
对于stream_response1_list中的块：
    delta = chunk.choices[0].delta 如果 chunk.choices 和 chunk.choices[0].delta 不是 None else None

    如果 delta 和 delta.content：
        full_delta_content += delta.content
        
    elif delta 和 delta.tool_calls：
        tc_chunk_list = delta.tool_calls
        对于 tc_chunk_list 中的 tc_chunk：
            if len(tool_calls) &lt;= tc_chunk.index:
                tool_calls.append({&quot;id&quot;: &quot;&quot;, &quot;type&quot;: &quot;function&quot;, &quot;function&quot;: {&quot;name&quot;: &quot;&quot;, &quot;arguments&quot;: &quot;&quot;}})
            tc = tool_calls[tc_chunk.index]

            如果 tc_chunk.id:
                tc[&quot;id&quot;] += tc_chunk.id
            如果 tc_chunk.function.name:
                tc[&quot;函数&quot;][&quot;名称&quot;] += tc_chunk.函数.名称
            如果 tc_chunk.function.arguments:
                tc[&quot;函数&quot;][&quot;参数&quot;] += tc_chunk.function.arguments


第2步：检查模型是否要调用函数
如果没有工具调用，它将返回另一个可迭代流以供调用者使用。
如果有工具调用，它会进行调用，将工具上下文添加到消息中，并使模型根据所有工具调用的返回/上下文输出响应。
&lt;块引用&gt;
如果不是 tool_calls 和 full_delta_content：
    messages.append({ &quot;角色&quot;: &quot;助理&quot;, &quot;内容&quot;: full_delta_content })

    # 将列表转换为流以作为响应返回
    异步 def list_to_stream():
        对于stream_response1_list中的项目：
            产量项

    返回list_to_stream()
elif 工具调用：


有关更多信息，请查看我的 github 存储库以及函数调用示例（不允许在此处发布链接）：
&lt;块引用&gt;
github：john-carroll-sw/chat-c​​ompletions-function-calling-examples
]]></description>
      <guid>https://community.openai.com/t/multiple-function-calls-with-streaming/594052#post_7</guid>
      <pubDate>Fri, 05 Apr 2024 20:11:30 GMT</pubDate>
    </item>
    <item>
      <title>有人可以帮助我（微调）</title>
      <link>https://community.openai.com/t/can-someone-help-me-with-fine-tuning/491368#post_11</link>
      <description><![CDATA[嗨 - 您能分享一下您的训练数据集的实际示例吗？您是否确保结构与此处提供的示例一致？]]></description>
      <guid>https://community.openai.com/t/can-someone-help-me-with-fine-tuning/491368#post_11</guid>
      <pubDate>Fri, 05 Apr 2024 20:09:55 GMT</pubDate>
    </item>
    </channel>
</rss>