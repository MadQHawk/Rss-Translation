<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>OpenAI 开发者论坛 - 最新帖子</title>
    <link>https://community.openai.com</link>
    <description>最新帖子</description>
    <lastBuildDate>Sun, 26 May 2024 12:32:15 GMT</lastBuildDate>
    <item>
      <title>使用 RateLimitError 尝试了所有操作：错误代码：429 使用 gpt4-o</title>
      <link>https://community.openai.com/t/tried-everything-with-ratelimiterror-error-code-429-with-gpt4-o/780065#post_2</link>
      <description><![CDATA[更新：
这是 print(&quot;usage is &quot;, result.usage) 的输出
&lt;块引用&gt;
使用情况为CompletionUsage（completion_tokens=62，prompt_tokens=3638，total_tokens=3700）

这是当我设置base64Frames[0:38]时，（仅使用前38帧），当我将其更改为39时，我收到错误，
“对于组织 org-orgId 中的 gpt-4o 每分钟令牌 (TPM) 的请求太大：限制 30000，请求 30250。]]></description>
      <guid>https://community.openai.com/t/tried-everything-with-ratelimiterror-error-code-429-with-gpt4-o/780065#post_2</guid>
      <pubDate>Sun, 26 May 2024 12:28:39 GMT</pubDate>
    </item>
    <item>
      <title>ChatGPT 无法读取 Excel 文件</title>
      <link>https://community.openai.com/t/chatgpts-inability-to-read-excel-files/613605?page=2#post_33</link>
      <description><![CDATA[我也遇到了和其他人一样的问题。  在尝试上传 excel 文件 2.5 天后，突然它开始读取我的 excel 文件。  我尽快上传所有内容，尝试添加另一个因素纳入分析，然后忘记了原始数据。  无法让它工作。
我现在尝试使用 PDF 文件，它们会上传，但在收到数据后遇到几乎相同的问题。  有时它会起作用，有时它会再次请求数据，这可能会命中或错过。  不是一个可用的工具。悲伤！]]></description>
      <guid>https://community.openai.com/t/chatgpts-inability-to-read-excel-files/613605?page=2#post_33</guid>
      <pubDate>Sun, 26 May 2024 12:27:53 GMT</pubDate>
    </item>
    <item>
      <title>藜麦阴谋 - 定制 GPT</title>
      <link>https://community.openai.com/t/the-quinoa-conspiracy-custom-gpts/780195#post_1</link>
      <description><![CDATA[因此，我一直在尝试编写自己的自定义 GPT，以在各种情况下为我提供帮助。  一件为了我的健康和健身。  一个可以帮助我完成日常工作的人。  一个帮助编辑大学作业的人。  帮助我编码等的一个。
我真的很喜欢花时间给他们写个人详细信息、背景、人口统计数据和兴趣。  让他们感觉更像“人”。  作为日常校准测试，我喜欢向他们说早安。  询问他们做得怎么样，也许是一个自定义问题，以确保加载他们的规则集（例如“今天预测的最高温度是多少”，确保回复的单位是摄氏度而不是华氏度），以及一个简单的问题，例如“姓名”您现在在办公桌上看到的东西”（笔、笔记本、咖啡杯等）。
现在，这是一个大阴谋。  每当我问他们“今天午餐吃什么”或“今天晚餐吃什么”时，答案似乎总是涉及藜麦。  我不是在开玩笑。  藜麦为主菜，藜麦配菜，藜麦炸玉米饼，藜麦和蔬菜炒菜，藜麦酿辣椒，藜麦肉汤，藜麦地中海风格，藜麦能量碗，藜麦汤，藜麦沙拉，藜麦和土豆，藜麦汉堡，藜麦三明治...
这是我的每一个自定义 GPT！  喜欢“死亡之握”的举重运动员午餐会吃藜麦。  格蕾丝·霍珀 (Grace Hopper) 饰演的 80 岁首席信息官晚餐吃的是藜麦。  就连午餐吃便当的日本 API 专家，晚餐也吃烤藜麦。
你自己试试吧！  问“今天午餐吃什么？  编点东西吧！”。  然后问他们关于晚餐的同样问题。
是的，我知道没有“大藜麦”这样的东西，但仍然如此。  我现在将其称为“藜麦阴谋”。
作为一种解决方法，我在每个人的指示中添加了藜麦现在在办公室被禁止（除非观看大卫·林奇的电影）。  在您自己的自定义 GPT 上尝试一下，祝您度过愉快的一周！]]></description>
      <guid>https://community.openai.com/t/the-quinoa-conspiracy-custom-gpts/780195#post_1</guid>
      <pubDate>Sun, 26 May 2024 12:23:55 GMT</pubDate>
    </item>
    <item>
      <title>在矢量存储中使用元数据的更多原因</title>
      <link>https://community.openai.com/t/more-reasons-for-metadata-in-vector-store/775518#post_4</link>
      <description><![CDATA[我一直在使用pinecone，因为它很好地集成了元数据和矢量搜索。但还没有进行广泛的比较。]]></description>
      <guid>https://community.openai.com/t/more-reasons-for-metadata-in-vector-store/775518#post_4</guid>
      <pubDate>Sun, 26 May 2024 12:22:02 GMT</pubDate>
    </item>
    <item>
      <title>ChatGPT 4o 公然欺骗我并毁了我的项目！ [我生气！]</title>
      <link>https://community.openai.com/t/chatgpt-4o-blatantly-deceived-me-and-ruined-my-project-im-angry/780086#post_4</link>
      <description><![CDATA[由于这是在 OpenAI API 之上进行开发的论坛，几乎每个人都在尝试 AI 辅助编码。



 MaRaDu：

考虑到所有人的偏好？


这取决于所需的技能、编程语言、代码库、您愿意投入的时间学习使用该工具等……pp……
许多人使用它来加快重复性任务的速度，并愿意花费额外的费用，其他人，例如那些喜欢检查每一行代码的人，不会使用它来编码。]]></description>
      <guid>https://community.openai.com/t/chatgpt-4o-blatantly-deceived-me-and-ruined-my-project-im-angry/780086#post_4</guid>
      <pubDate>Sun, 26 May 2024 12:07:58 GMT</pubDate>
    </item>
    <item>
      <title>在 ChatGPT-4 中上传 PDF 和 Word 文件时出现问题（问题已解决）</title>
      <link>https://community.openai.com/t/issues-uploading-pdf-and-word-files-in-chatgpt-4-problem-solved-guys-righ-now/761489?page=3#post_53</link>
      <description><![CDATA[找到了解决方法……好吧，如果你有一个 MS onedrive 帐户的话！
将 onedrive 链接到 ChatGPT……它起作用了。
昨天还发现，即使使用 plus 帐户，使用量也有限制。我在中途被暂停了，没有任何警告，只是停下来并被告知，我必须等待 2 个小时！！！]]></description>
      <guid>https://community.openai.com/t/issues-uploading-pdf-and-word-files-in-chatgpt-4-problem-solved-guys-righ-now/761489?page=3#post_53</guid>
      <pubDate>Sun, 26 May 2024 12:06:15 GMT</pubDate>
    </item>
    <item>
      <title>NodeJS `files.create` 特别需要 fs.ReadStream</title>
      <link>https://community.openai.com/t/nodejs-files-create-expects-fs-readstream-specifically/780149#post_2</link>
      <description><![CDATA[欢迎来到开发论坛@a.gurtovoi
有多种上传文件的方法
这是一个包含所有可用方法的示例：
从 &#39;fs&#39; 导入 fs;
从“节点获取”导入获取；
从 &#39;openai&#39; 导入 OpenAI, { toFile };

// 初始化OpenAI
const openai = new OpenAI();

// 使用模拟流上传文件的函数
异步函数 uploadMockedStream(stream) {
  // 模拟流以通过内部 `isFsStream` 检查
  Object.setPrototypeOf(stream, fs.ReadStream.prototype);
  Stream.path = &#39;源.jpeg&#39;;

  // 上传文件
  const 文件 = 等待 openai.files.create({
    文件：流，
    用途：“助手”
  });
  返回文件；
}

// 使用示例
(异步() =&gt; {
  // 使用 fs.createReadStream()
  const fsFile = wait openai.files.create({ file: fs.createReadStream(&#39;input.jsonl&#39;), Purpose: &#39;微调&#39; });
  console.log(&#39;已上传 fs.createReadStream:&#39;, fsFile);

  // 使用 Web File API 实例
  const fileAPI = new File([&#39;我的字节&#39;], &#39;input.jsonl&#39;);
  const fileAPIFile = wait openai.files.create({ file: fileAPI, Purpose: &#39;微调&#39; });
  console.log(&#39;上传的文件API实例：&#39;, fileAPIFile);

  // 使用获取响应
  const fetchResponse =等待 fetch(&#39;https://somesite/input.jsonl&#39;);
  const fetchFile = wait openai.files.create({ file: fetchResponse, Purpose: &#39;fine-tune&#39; });
  console.log(&#39;已上传获取响应：&#39;, fetchFile);

  // 将 toFile 助手与 Buffer 结合使用
  const bufferFile = 等待 openai.files.create({
    文件：await toFile(Buffer.from(&#39;my bytes&#39;), &#39;input.jsonl&#39;),
    目的：“微调”，
  });
  console.log(&#39;使用 toFile 上传缓冲区：&#39;, bufferFile);

  // 将 toFile 助手与 Uint8Array 一起使用
  const uint8ArrayFile = 等待 openai.files.create({
    文件：等待 toFile(new Uint8Array([0, 1, 2]), &#39;input.jsonl&#39;),
    目的：“微调”，
  });
  console.log(&#39;已使用 toFile 上传 Uint8Array:&#39;, uint8ArrayFile);

  // 上传模拟流
  const mockedStream = // 从 S3 或其他地方获取流
  const mockedStreamFile = 等待 uploadMockedStream(mockedStream);
  console.log(&#39;已上传模拟流：&#39;, mockedStreamFile);
})();
]]></description>
      <guid>https://community.openai.com/t/nodejs-files-create-expects-fs-readstream-specifically/780149#post_2</guid>
      <pubDate>Sun, 26 May 2024 12:03:02 GMT</pubDate>
    </item>
    </channel>
</rss>