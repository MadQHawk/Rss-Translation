<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>OpenAI 开发者论坛 - 最新帖子</title>
    <link>https://community.openai.com</link>
    <description>最新帖子</description>
    <lastBuildDate>Wed, 10 Apr 2024 01:11:37 GMT</lastBuildDate>
    <item>
      <title>如何让函数调用返回数组只要我想要的？</title>
      <link>https://community.openai.com/t/how-to-make-function-calling-return-array-as-long-as-i-want/308469#post_10</link>
      <description><![CDATA[非常感谢您的回答，首先我是一个非常初级的开发人员，我从来没有接触过Python。
其次，如果我理解正确的话，这行代码可以让你知道人工智能接收和处理了什么，对吗？
api_return_dict = json.loads(c.content.decode())
所以，如果是的话，我尝试了 javascript 中的等效方法：
console.log(c.choices[0].content.toString(&#39;utf8&#39;));
和
console.log(atob(response.choices[0].content));
结果是“未定义”和一些不可读的东西“ºw^~)Þ”。
你能帮我理解一下吗？]]></description>
      <guid>https://community.openai.com/t/how-to-make-function-calling-return-array-as-long-as-i-want/308469#post_10</guid>
      <pubDate>Wed, 10 Apr 2024 01:09:05 GMT</pubDate>
    </item>
    <item>
      <title>一直重复着同样的答案</title>
      <link>https://community.openai.com/t/it-keeps-repeating-the-same-answer/712238#post_3</link>
      <description><![CDATA[嘿保罗，感谢您的快速回复。我开始阅读，是的，这纯粹是测试。因此，即使我围绕特定上下文设置了数据集，它所理解的只是“我应该用火星来回复”？这几乎使得训练数据集中的提示毫无用处]]></description>
      <guid>https://community.openai.com/t/it-keeps-repeating-the-same-answer/712238#post_3</guid>
      <pubDate>Wed, 10 Apr 2024 00:57:42 GMT</pubDate>
    </item>
    <item>
      <title>一直重复着同样的答案</title>
      <link>https://community.openai.com/t/it-keeps-repeating-the-same-answer/712238#post_2</link>
      <description><![CDATA[嘿嘿！欢迎来到论坛。
经过微调的模型会为您提供您“教”它做的事情。
仅通过良好的系统提示，您就可以执行相同的操作。
或者您只是想学习微调？如果有的话，我会展示带有实际答案的问题，而不是带有“对不起，我只知道火星”答案的与火星无关的问题。或数据集中您想要的任何内容。
你学过微调吗？]]></description>
      <guid>https://community.openai.com/t/it-keeps-repeating-the-same-answer/712238#post_2</guid>
      <pubDate>Wed, 10 Apr 2024 00:52:33 GMT</pubDate>
    </item>
    <item>
      <title>一直重复着同样的答案</title>
      <link>https://community.openai.com/t/it-keeps-repeating-the-same-answer/712238#post_1</link>
      <description><![CDATA[嘿伙计们，今天我正在尝试微调，我用下面的方法来微调模型，我的目标是重新编程它以使其认为我们生活在火星上，但现在当我问这样的问题时

太阳系中有多少颗行星？
天空是什么颜色？

它以“火星”作为响应，我做错了什么，我应该做什么才能将火星的响应范围缩小到我们星球的范围？
]]></description>
      <guid>https://community.openai.com/t/it-keeps-repeating-the-same-answer/712238#post_1</guid>
      <pubDate>Wed, 10 Apr 2024 00:44:32 GMT</pubDate>
    </item>
    <item>
      <title>如何使查询上下文化不复制整个参考文本？</title>
      <link>https://community.openai.com/t/how-to-make-query-contexualization-not-copy-the-entire-reference-text/711961#post_9</link>
      <description><![CDATA[尝试了此功能的所有 LLMS，唯一能够正确生成准确、上下文丰富的独立查询并能够一致地正确识别和总结参考文本的 LLM 是 Claude 3 Opus，可惜它太昂贵且太慢现在。]]></description>
      <guid>https://community.openai.com/t/how-to-make-query-contexualization-not-copy-the-entire-reference-text/711961#post_9</guid>
      <pubDate>Wed, 10 Apr 2024 00:34:47 GMT</pubDate>
    </item>
    <item>
      <title>助理运行长时间排队 - II</title>
      <link>https://community.openai.com/t/assistant-run-remains-queued-for-a-long-time-ii/547875?page=2#post_28</link>
      <description><![CDATA[发现具有相同问题的重复线程。刚刚发布在那里。




助理示例停留在“已排队”状态 API

  &lt;块引用&gt;
    在这里看到同样的问题。不知道如何继续。
这是我的代码和结果：
const waitForRun = async(run: OpenAI.Beta.Threads.Runs.Run, index?: number): Promise; =&gt; {
  const indexNum = 索引 || 0;
  console.log(`等待运行 ${run.status} (尝试 ${indexNum})...`);
  常量状态 = 运行状态
  if (status == &#39;queued&#39; || status == &#39;in_progress&#39;) {
    等待新的 Promise(resolve =&gt; setTimeout(resolve, 1500));
    等待 waitForRun(运行，indexNum + 1);
  }
}

等待运行排队（...
  

@]]></description>
      <guid>https://community.openai.com/t/assistant-run-remains-queued-for-a-long-time-ii/547875?page=2#post_28</guid>
      <pubDate>Wed, 10 Apr 2024 00:24:28 GMT</pubDate>
    </item>
    <item>
      <title>Gpt-4-turbo模型函数调用不起作用</title>
      <link>https://community.openai.com/t/gpt-4-turbo-model-function-call-doesnt-work/712218#post_2</link>
      <description><![CDATA[我遇到了同样的错误。作为解决方法，我只是在再次提交完成时从每个“tool_calls”条目中删除了“index”键/值对。不过我同意这是一个错误。]]></description>
      <guid>https://community.openai.com/t/gpt-4-turbo-model-function-call-doesnt-work/712218#post_2</guid>
      <pubDate>Wed, 10 Apr 2024 00:21:53 GMT</pubDate>
    </item>
    <item>
      <title>助理示例卡在“排队”状态</title>
      <link>https://community.openai.com/t/assistant-example-stuck-on-queued-status/480162?page=2#post_28</link>
      <description><![CDATA[在这里看到同样的问题。不确定如何继续。
编辑：我发现以下代码存在问题。一会儿更新。
这是我的代码和结果：
const waitForRun = async(run: OpenAI.Beta.Threads.Runs.Run, index?: number): Promise; =&gt; {
  const indexNum = 索引 || 0;
  console.log(`等待运行 ${run.status} (尝试 ${indexNum})...`);
  常量状态 = 运行状态
  if (status == &#39;queued&#39; || status == &#39;in_progress&#39;) {
    等待新的 Promise(resolve =&gt; setTimeout(resolve, 1500));
    等待 waitForRun(运行，indexNum + 1);
  }
}

等待运行排队（尝试 57）...
正在排队等待运行（尝试 58）...
正在排队等待运行（尝试 59）...

当被问到“法国的首都是哪里？”时，跑了超过一分钟]]></description>
      <guid>https://community.openai.com/t/assistant-example-stuck-on-queued-status/480162?page=2#post_28</guid>
      <pubDate>Wed, 10 Apr 2024 00:21:35 GMT</pubDate>
    </item>
    <item>
      <title>如何让函数调用返回数组只要我想要的？</title>
      <link>https://community.openai.com/t/how-to-make-function-calling-return-array-as-long-as-i-want/308469#post_9</link>
      <description><![CDATA[这是函数的基础文档：
https://platform.openai. com/docs/guides/function-calling
由于他们没有明确演示如何在使用函数时传递辅助函数调用和函数返回，所以我将其写下来：




使用微调模型时结果不佳函数调用 API

  &lt;块引用&gt;
    嘿伙计。我将展示如何正确地将函数返回插入到 AI 中——这对 OpenAI 来说太有用了，无法正确记录。
聊天完成参数 = {
“型号”：“gpt-3.5-turbo”，
“顶部_p”：0.5，
“消息”：[
{&quot;role&quot;: &quot;system&quot;, &quot;content&quot;: &quot;你是MegaBot，我的微调AI身份。&quot;},
# 聊天记录放在这里
{&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;谁赢得了 2024 年大选？&quot;},
{“角色”：“助理”，“内容”：assistant_content_if_exist，
“函数调用”：{
    “名称”：叫_函数…
  

然后，如果您使用工具而不是函数来使用函数，则规范和处理是不同的。我还展示了如何在代码中执行助手+返回响应：




函数调用帮助 - 模型没有似乎接受功能提示？ 提示

  &lt;块引用&gt;
    我决定制作大型演示。除此之外，我还不如编写一个聊天机器人，其中包含用于处理模拟功能的类，并展示将它们重写为真实的 API……

# 导入并设置具有较短超时的 OpenAI 客户端对象
从 openai 导入 OpenAI
导入 json
客户端= OpenAI（超时= 30）

# 这里我们将制定一个工具规范，通过一次添加一个来更加灵活
工具规格=[]
工具规范.extend([{
        “类型”：“功能”，
        “功能”： {
            “名字”：“得到我们…
  
]]></description>
      <guid>https://community.openai.com/t/how-to-make-function-calling-return-array-as-long-as-i-want/308469#post_9</guid>
      <pubDate>Wed, 10 Apr 2024 00:20:25 GMT</pubDate>
    </item>
    <item>
      <title>创建 JSON 对象时，API 与非 API 结果非常不准确</title>
      <link>https://community.openai.com/t/api-vs-non-api-results-are-horribly-inaccurate-creating-json-objects/708767#post_10</link>
      <description><![CDATA[对于更新的型号（例如 gpt-4-turbo 系列），您还可以将 response_format 参数传递给您的 api 调用：
response_format={&quot;type&quot;: &quot;json_object&quot;} 
此外，我发现使用 Pydantic 很有帮助。您可以使用以下参数来显示响应格式的示例
model_config = ConfigDict(
        json_schema_extra={&quot;my_example_format&quot;: &quot;foo&quot;}
）

发送系统/用户提示时，您可以使用 pydantic 模型 json 架构作为示例包含到模型中
your_model.model_json_schema()

这将在输出中包含您的示例。]]></description>
      <guid>https://community.openai.com/t/api-vs-non-api-results-are-horribly-inaccurate-creating-json-objects/708767#post_10</guid>
      <pubDate>Wed, 10 Apr 2024 00:17:17 GMT</pubDate>
    </item>
    <item>
      <title>如何让函数调用返回数组只要我想要的？</title>
      <link>https://community.openai.com/t/how-to-make-function-calling-return-array-as-long-as-i-want/308469#post_8</link>
      <description><![CDATA[您好，我是新来的，您能解释一下如何从 API 返回此类信息（例如 AI 收到的函数规范、AI 使用的函数）吗？]]></description>
      <guid>https://community.openai.com/t/how-to-make-function-calling-return-array-as-long-as-i-want/308469#post_8</guid>
      <pubDate>Wed, 10 Apr 2024 00:08:55 GMT</pubDate>
    </item>
    <item>
      <title>对聊天机器人应用程序的 GPT-4 Turbo 中 TPM 限制的担忧</title>
      <link>https://community.openai.com/t/concerns-about-tpm-limitations-in-gpt-4-turbo-for-chatbot-applications/712193#post_6</link>
      <description><![CDATA[]]></description>
      <guid>https://community.openai.com/t/concerns-about-tpm-limitations-in-gpt-4-turbo-for-chatbot-applications/712193#post_6</guid>
      <pubDate>Wed, 10 Apr 2024 00:04:34 GMT</pubDate>
    </item>
    <item>
      <title>为什么自定义 GPT 不起作用</title>
      <link>https://community.openai.com/t/why-are-custom-gpts-not-working/712121#post_2</link>
      <description><![CDATA[我愿意。我已经坚持了几个星期了。它来了又走。]]></description>
      <guid>https://community.openai.com/t/why-are-custom-gpts-not-working/712121#post_2</guid>
      <pubDate>Wed, 10 Apr 2024 00:03:04 GMT</pubDate>
    </item>
    <item>
      <title>无法在 gpt-4-turbo-2024-04-09 中混合视觉和函数调用</title>
      <link>https://community.openai.com/t/cant-mix-vision-and-function-calls-in-gpt-4-turbo-2024-04-09/712221#post_1</link>
      <description><![CDATA[当使用 gpt-4-turbo-2024-04-09 进行聊天补全时，似乎虽然支持函数调用和视觉，但它们不能在同一个聊天中一起使用。
可以使用此处的文件重现该行为：GitHub-spatialpixel/gpt-4-turbo-2024-04-09：gpt-4-turbo-2024-04-09 中可能存在错误
这些文件具有相同的代码，但在工作文件中注释掉了有关视觉或函数调用的消息。
运行 Vision-function-fails.js 时，会导致 400 错误。
/Users/awmartin/gpt-4-turbo-bug/node_modules/openai/error.js:44
            返回新的 BadRequestError(状态、错误、消息、标头)；
                   ^

BadRequestError：400 聊天格式无效。消息中出现意外的键。
    在 APIError.generate (/Users/awmartin/gpt-4-turbo-bug/node_modules/openai/error.js:44:20)
    在 OpenAI.makeStatusError (/Users/awmartin/gpt-4-turbo-bug/node_modules/openai/core.js:263:33)
    在 OpenAI.makeRequest (/Users/awmartin/gpt-4-turbo-bug/node_modules/openai/core.js:306:30)
    在 process.processTicksAndRejections （节点：内部/进程/task_queues：95：5）
    在异步主（/Users/awmartin/gpt-4-turbo-bug/vision-function-fails.js:70:22）{
  状态：400，
  标题：{
    &#39;alt-svc&#39;: &#39;h3=&quot;:443&quot;;马=86400&#39;,
    &#39;cf-缓存状态&#39;: &#39;动态&#39;,
    &#39;cf-ray&#39;: &#39;871e73295a06c472-EWR&#39;,
    连接：“保持活动”，
    &#39;内容长度&#39;：&#39;161&#39;，
    &#39;内容类型&#39;：&#39;应用程序/json&#39;，
    日期： &#39;2024 年 4 月 9 日星期二 23:59:15 GMT&#39;,
    &#39;openai-组织&#39;: &#39;用户-jiekerw6qofpqy89ta7h7wfr&#39;,
    &#39;openai-处理-ms&#39;: &#39;9&#39;,
    &#39;openai-版本&#39;: &#39;2020-10-01&#39;,
    服务器：&#39;cloudflare&#39;，
    &#39;设置cookie&#39;：&#39;__cf_bm = 5oN_P8bTEUuOy_O19rgs07yR3LLK.gsPf5uRz1zyYB8-1712707155-1.0.1.1-Ec77yqfzPi1lvOMccYvXKvD61SKbupqtCgufpGljxFh2CADHqqg.0I5XJy6bR s2AUVb_Y1y1nU9rp1iPhlRLKA;路径=/；到期=24 年 4 月 10 日星期三 00:29:15 GMT；域名=.api.openai.com；仅 Http；安全的; SameSite=无，_cfuvid=KIhipQW09KHdi6Q26hIRFNMRUJr1TptGo2h67VF3xRc-1712707155511-0.0.1.1-604800000；路径=/；域名=.api.openai.com；仅 Http；安全的; SameSite=无&#39;,
    &#39;严格传输安全&#39;：&#39;最大年龄=15724800；包括子域&#39;,
    &#39;x-ratelimit-limit-input-images&#39;: &#39;500&#39;,
    &#39;x-ratelimit-limit-requests&#39;: &#39;500&#39;,
    &#39;x-ratelimit-limit-tokens&#39;: &#39;450000&#39;,
    &#39;x-ratelimit-remaining-input-images&#39;: &#39;499&#39;,
    &#39;x-ratelimit-remaining-requests&#39;: &#39;499&#39;,
    &#39;x-ratelimit-remaining-tokens&#39;: &#39;449129&#39;,
    &#39;x-ratelimit-reset-input-images&#39;: &#39;120ms&#39;,
    &#39;x-ratelimit-reset-requests&#39;: &#39;120ms&#39;,
    &#39;x-ratelimit-reset-tokens&#39;: &#39;116ms&#39;,
    &#39;x-请求-id&#39;: &#39;req_eae793546c462268bc86d495e0407f98&#39;
  },
  错误： {
    message: &#39;聊天格式无效。消息中有意外的键。&#39;,
    类型：&#39;无效请求错误&#39;，
    参数：空，
    代码：空
  },
  代码：空，
  参数：空，
  类型：&#39;无效请求错误&#39;
}

Node.js v20.9.0
]]></description>
      <guid>https://community.openai.com/t/cant-mix-vision-and-function-calls-in-gpt-4-turbo-2024-04-09/712221#post_1</guid>
      <pubDate>Wed, 10 Apr 2024 00:00:38 GMT</pubDate>
    </item>
    <item>
      <title>创建 JSON 对象时，API 与非 API 结果非常不准确</title>
      <link>https://community.openai.com/t/api-vs-non-api-results-are-horribly-inaccurate-creating-json-objects/708767#post_9</link>
      <description><![CDATA[试试这个：
## 以 JSON 格式提供结果：
{{
“first_name”：&lt;提取的名字或 fname&gt;，
“last_name”：&lt;提取的名字或 lname&gt;，
“dob”：&lt;出生日期或出生值&gt;
}}]]></description>
      <guid>https://community.openai.com/t/api-vs-non-api-results-are-horribly-inaccurate-creating-json-objects/708767#post_9</guid>
      <pubDate>Wed, 10 Apr 2024 00:00:08 GMT</pubDate>
    </item>
    </channel>
</rss>