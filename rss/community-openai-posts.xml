<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>OpenAI 开发者论坛 - 最新帖子</title>
    <link>https://community.openai.com</link>
    <description>最新帖子</description>
    <lastBuildDate>Thu, 27 Jun 2024 01:18:58 GMT</lastBuildDate>
    <item>
      <title>使用 Assistant V2 进行流媒体和 Python</title>
      <link>https://community.openai.com/t/using-an-assistant-v2-with-streaming-and-python/726494#post_7</link>
      <description><![CDATA[我正在尝试创建一个交互式脚本。我在 openai 文档网站上没有看到这方面的示例。我所说的交互式是指用户与助手聊天以进行文件搜索和操作等操作的脚本。]]></description>
      <guid>https://community.openai.com/t/using-an-assistant-v2-with-streaming-and-python/726494#post_7</guid>
      <pubDate>Thu, 27 Jun 2024 01:11:35 GMT</pubDate>
    </item>
    <item>
      <title>发送文件至完成 API</title>
      <link>https://community.openai.com/t/send-files-to-completion-api/575385#post_9</link>
      <description><![CDATA[另外两个不错的选择是：

根据文档数据微调模型。虽然耗时，但是一个很好的解决方案，而且可以很好地学习。然后在微调后的模型上使用聊天完成功能。
在您选择的模型（例如 gpt-4o）允许的 128k（或任何大）消息空间中发送（从您的文档中提取的适当文本块）。大消息将开始变得“​​昂贵”（例如 0.10 美元！）但这是一个解决方案。

您可能需要一个单独的、可能简单的 AI 调用来确定文档中哪些部分适合您当前的问题/讨论。]]></description>
      <guid>https://community.openai.com/t/send-files-to-completion-api/575385#post_9</guid>
      <pubDate>Thu, 27 Jun 2024 01:10:17 GMT</pubDate>
    </item>
    <item>
      <title>简单的说明，请给我一个有效的链接！</title>
      <link>https://community.openai.com/t/simple-instructions-and-please-give-me-a-link-that-works/841940#post_2</link>
      <description><![CDATA[欢迎加入社区！
右上角，当您编辑自定义 gpt 时


]]></description>
      <guid>https://community.openai.com/t/simple-instructions-and-please-give-me-a-link-that-works/841940#post_2</guid>
      <pubDate>Thu, 27 Jun 2024 01:08:42 GMT</pubDate>
    </item>
    <item>
      <title>AiAssistant 呼叫功能响应不正确</title>
      <link>https://community.openai.com/t/incorrect-response-with-aiassistant-calls-function/841946#post_1</link>
      <description><![CDATA[有时我的 AI 助手函数被调用时带有错误的 json 参数，它像这样传递，参数嵌入另一个对象中，
错误参数的示例
&quot;required_action&quot;:{
&quot;type&quot;:&quot;submit_tool_outputs&quot;,
&quot;submit_tool_outputs&quot;:{
&quot;tool_calls&quot;:[
{
&quot;id&quot;:&quot;call_3oXLTIRnUJ4eFKrqhWi0qYON&quot;,
&quot;type&quot;:&quot;function&quot;,
&quot;function&quot;:{
&quot;name&quot;:&quot;get_answer&quot;,
&quot;arguments&quot;:&quot;{\n \&quot;recipient_name\&quot;: \&quot;functions.get_answer\&quot;,\n \&quot;parameters\&quot;: {\n \&quot;QuestionId\&quot;: 29537,\n \&quot;Reasoning\&quot;: \&quot;摘要说 xxxxx.\&quot;,\n \&quot;Answer\&quot;: [\&quot;3 或less\&quot;],\n \&quot;Question\&quot;: \&quot;xxxxxxxxxxxx?\&quot;\n }\n}&quot;
}
}
]
}
}

通常它会像这样出现
&quot;required_action&quot;: {
&quot;type&quot;: &quot;submit_tool_outputs&quot;,
&quot;submit_tool_outputs&quot;: {
&quot;tool_calls&quot;: [
{
&quot;id&quot;: &quot;call_dGXJ3hlFeH5gc2mf0cti6nRh&quot;,
&quot;type&quot;: &quot;function&quot;,
&quot;function&quot;: {
&quot;name&quot;: &quot;get_answer&quot;,
&quot;arguments&quot;: &quot;{\n \&quot;QuestionId\&quot;: 29537,\n \&quot;Reasoning\&quot;: \&quot;xxxxxxxxxxxxx\&quot;,\n \&quot;Answer\&quot;: [\&quot;3 or less\&quot;],\n \&quot;Question\&quot;: \&quot;xxxxxxxxx\&quot;\n}&quot;
}
}
]
}
}

我的助手函数是这样的
{
&quot;name&quot;: &quot;get_answer&quot;,
&quot;description&quot;: &quot;查看数据摘要，尝试回答问题&quot;,
&quot;parameters&quot;: {
&quot;type&quot;: &quot;object&quot;,
&quot;properties&quot;: {
&quot;QuestionId&quot;: {
&quot;type&quot;: &quot;integer&quot;,
&quot;description&quot;: &quot;问题 ID，仅数字 ID。&quot;
},
&quot;推理&quot;: {
&quot;type&quot;: &quot;string&quot;,
&quot;description&quot;: &quot;告诉我你选择这个答案的理由&quot;
},
&quot;答案&quot;: {
&quot;type&quot;: &quot;array&quot;,
&quot;items&quot;: {
&quot;type&quot;: &quot;string&quot;
},
&quot;description&quot;: &quot;根据要求列出一个或多个答案，适用于所问问题 ID，任何日期答案都必须是 dd MMM yyyy 中的完整日期，如果日期只是部分日期，则将其设为该月的 1 号，如果没有月份，只有年份，则将月份设为 1 月&quot;
},
&quot;问题&quot;: {
&quot;type&quot;: &quot;string&quot;,
&quot;description&quot;: &quot;所问问题应转义任何双引号或任何可能破坏 JSON 格式的内容&quot;
}
},
&quot;required&quot;: [
&quot;问题 ID&quot;,
&quot;推理&quot;,
&quot;答案&quot;,
&quot;问题&quot;
]
}
}

我看到了在另一篇文章中你可以返回
 {&quot;status&quot;: &quot;error&quot;, &quot;message&quot;: &quot;invalid parameters&quot;}

所以我这样做，只是担心如果它一直在参数中发送错误的 JSON，可能会陷入永久循环]]></description>
      <guid>https://community.openai.com/t/incorrect-response-with-aiassistant-calls-function/841946#post_1</guid>
      <pubDate>Thu, 27 Jun 2024 01:07:18 GMT</pubDate>
    </item>
    <item>
      <title>简单的说明，请给我一个有效的链接！</title>
      <link>https://community.openai.com/t/simple-instructions-and-please-give-me-a-link-that-works/841940#post_1</link>
      <description><![CDATA[嗨！
我看到我们可以创建自己的 GPT。我很容易就开始了。但是，现在我卡住了！我想发布我的 GPT。我问过 ChatGPT，它总是指向没有“发布按钮”或类似内容的链接。
我做错了什么？
请帮帮我 
LeCOQ.Cafe]]></description>
      <guid>https://community.openai.com/t/simple-instructions-and-please-give-me-a-link-that-works/841940#post_1</guid>
      <pubDate>Thu, 27 Jun 2024 00:59:06 GMT</pubDate>
    </item>
    <item>
      <title>发送文件至完成 API</title>
      <link>https://community.openai.com/t/send-files-to-completion-api/575385#post_8</link>
      <description><![CDATA[“转到选项”是使用“助手”API 来查询文档。
我认为第一次你应该：

转到“游乐场”https://platform.openai.com/playground/chat?models=gpt-4o
选择“助手”（第二个），并在左上角选择“创建”
单击“创建”并添加系统说明（以及任何其他设置）
单击“+ 文件”并上传你的文件。处理需要一段时间（几分钟）
在演练场中尝试几个查询，以确保它按您认为的那样工作。

使用您的助手 ID 和文件 ID，您现在可以通过助手 API（而不是聊天完成 API）查询您的文档。互联网上有许多关于如何通过 Assistant API 查询文档的示例。
您稍后可以通过 Assistant API 上传文档、修改助手和创建新助手。
请注意，Assistant API 之所以“昂贵”（并非如此，但相比之下）仅仅是因为 openai 强制将 VAST 系统消息添加到您的系统消息中，例如 15,000 个令牌（是的，真的），并且每次您在 Assistant API 上“运行”您的“线程”时都会重复发送该消息。
您想要做的事情 - 通过聊天完成 API 查询文档 - 我认为会发生……不知何故，一些黑客攻击，只是因为它将占成本的 5%。]]></description>
      <guid>https://community.openai.com/t/send-files-to-completion-api/575385#post_8</guid>
      <pubDate>Thu, 27 Jun 2024 00:52:22 GMT</pubDate>
    </item>
    <item>
      <title>我可以使用 Open AI Moderation API 来处理非 Open AI 内容吗？第 2 部分</title>
      <link>https://community.openai.com/t/can-i-use-open-ai-moderation-api-agaist-non-open-ai-content-part-2/673566#post_10</link>
      <description><![CDATA[我似乎记得几个月前他们宣布现在可以将它与非 OpenAI 内容一起使用。]]></description>
      <guid>https://community.openai.com/t/can-i-use-open-ai-moderation-api-agaist-non-open-ai-content-part-2/673566#post_10</guid>
      <pubDate>Thu, 27 Jun 2024 00:44:44 GMT</pubDate>
    </item>
    <item>
      <title>Markdown 的 token 效率比 JSON 高 15%</title>
      <link>https://community.openai.com/t/markdown-is-15-more-token-efficient-than-json/841742#post_3</link>
      <description><![CDATA[是的，我想我们之前已经讨论过这个问题了。
至少在 Markdown 与 \LaTeX 的背景下肯定如此。
Markdown 确实牺牲了相当多的灵活性，以换取更紧凑的格式。
Markdown 也是大多数 LLM 的“本土”语言，因此它也倾向于更好地进行标记。]]></description>
      <guid>https://community.openai.com/t/markdown-is-15-more-token-efficient-than-json/841742#post_3</guid>
      <pubDate>Thu, 27 Jun 2024 00:43:53 GMT</pubDate>
    </item>
    <item>
      <title>ChatGPT 4 在梵语语法方面的准确率是否明显高于 3.5</title>
      <link>https://community.openai.com/t/is-chatgpt-4-significantly-more-accurate-than-3-5-in-sanskrit-grammar/646886#post_4</link>
      <description><![CDATA[作为一名梵语老师，我可以 100% 自信地作证，即使 3.5 是免费的，也不要用它来翻译梵语。我已经测试了截至 2024 年 6 月的所有模型，用于来回翻译（devanāgarī 和 IAST），包括“去掉连词”之类的提示。
梵语到英语或英语到梵语的最准确模型：GPT4o、Gemini 1.5（因为谷歌在语言翻译方面拥有多年的专业知识）和 Claude 3.5 Sonnet（以及即将推出的 Opus）。
我主要会坚持使用 GPT4o。]]></description>
      <guid>https://community.openai.com/t/is-chatgpt-4-significantly-more-accurate-than-3-5-in-sanskrit-grammar/646886#post_4</guid>
      <pubDate>Thu, 27 Jun 2024 00:25:47 GMT</pubDate>
    </item>
    <item>
      <title>无法在 GPT-4o MacOS 应用程序中下载生成的图像</title>
      <link>https://community.openai.com/t/unable-to-download-generated-images-in-gpt-4o-macos-app/763112#post_11</link>
      <description><![CDATA[（帖子已被作者删除）]]></description>
      <guid>https://community.openai.com/t/unable-to-download-generated-images-in-gpt-4o-macos-app/763112#post_11</guid>
      <pubDate>Thu, 27 Jun 2024 00:19:19 GMT</pubDate>
    </item>
    <item>
      <title>想要使用 openai API 翻译文件</title>
      <link>https://community.openai.com/t/want-to-translate-file-using-openai-api/841890#post_2</link>
      <description><![CDATA[欢迎加入社区！
根据文件的大小，您可能需要逐个执行。
以前有编辑和插入模式，但后来被废弃了。https://openai.com/index/gpt-3-edit-insert/（但它们可能并没有按照您希望的方式执行）
当然，您可以使用命令提示符执行此操作：在文档https://platform.openai.com/docs/guides/text-generation/chat-c​​ompletions-api中查找 curl 命令，并让 chatgpt 将它们转换为 cmd 或 powershell（如果需要）。]]></description>
      <guid>https://community.openai.com/t/want-to-translate-file-using-openai-api/841890#post_2</guid>
      <pubDate>Thu, 27 Jun 2024 00:15:41 GMT</pubDate>
    </item>
    <item>
      <title>GPT-4o 音频 API 访问——OpenAI 说的是几周，而不是几个月！</title>
      <link>https://community.openai.com/t/gpt-4o-audio-api-access-openai-said-weeks-not-months/827068#post_8</link>
      <description><![CDATA[我宁愿他们先修复 GPT-4o 的 JSON 和其他格式问题，然后再发布另一个有问题的产品。我希望这就是他们在这里浪费时间的原因。]]></description>
      <guid>https://community.openai.com/t/gpt-4o-audio-api-access-openai-said-weeks-not-months/827068#post_8</guid>
      <pubDate>Thu, 27 Jun 2024 00:12:53 GMT</pubDate>
    </item>
    <item>
      <title>ChatGPT - 语音模式屏幕进入睡眠状态</title>
      <link>https://community.openai.com/t/chatgpt-voice-mode-screen-go-to-sleep/806010#post_14</link>
      <description><![CDATA[我也是。这真的很麻烦，并且实际上使得应用程序在现场使用起来非常不方便，如果不修复，我可能会取消订阅。]]></description>
      <guid>https://community.openai.com/t/chatgpt-voice-mode-screen-go-to-sleep/806010#post_14</guid>
      <pubDate>Thu, 27 Jun 2024 00:06:51 GMT</pubDate>
    </item>
    <item>
      <title>开发人员真的会费心阅读这些吗？ Revive Sky</title>
      <link>https://community.openai.com/t/do-devs-even-bother-reading-these-revive-sky/768238#post_5</link>
      <description><![CDATA[这更像是女演员发脾气或想要出名的问题，而不是合法的法律问题。]]></description>
      <guid>https://community.openai.com/t/do-devs-even-bother-reading-these-revive-sky/768238#post_5</guid>
      <pubDate>Thu, 27 Jun 2024 00:04:11 GMT</pubDate>
    </item>
    <item>
      <title>天空之声-她还会回来吗？</title>
      <link>https://community.openai.com/t/sky-voice-will-she-ever-return/769894#post_19</link>
      <description><![CDATA[她是唯一。其他声音都不足以让我继续订阅。]]></description>
      <guid>https://community.openai.com/t/sky-voice-will-she-ever-return/769894#post_19</guid>
      <pubDate>Thu, 27 Jun 2024 00:01:07 GMT</pubDate>
    </item>
    </channel>
</rss>