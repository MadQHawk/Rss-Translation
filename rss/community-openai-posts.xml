<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>OpenAI 开发者论坛 - 最新帖子</title>
    <link>https://community.openai.com</link>
    <description>最新帖子</description>
    <lastBuildDate>Mon, 15 Apr 2024 18:23:38 GMT</lastBuildDate>
    <item>
      <title>我需要对我的训练数据进行微调模型答案，这可能吗？或 ¿ 我需要使用基于嵌入的搜索吗？</title>
      <link>https://community.openai.com/t/i-need-that-the-fine-tune-model-answer-over-my-training-data-its-posible-or-do-i-need-use-embeddings-based-search/717602#post_3</link>
      <description><![CDATA[例如，我有来自我数据库的数据，我需要微调来回答有关我自己的数据的问题，但是微调可能不记得训练文件中使用的数据，我的想法是Openai创建一个电子邮件和我的数据库中的数据之间的关系，电子邮件是产品订单，我希望它是一个更加自动化的过程。
因此，如果我想微调训练文件的结构，或者我需要使用嵌入。
结果将是使用 OpenAI 函数调用的 JSON。]]></description>
      <guid>https://community.openai.com/t/i-need-that-the-fine-tune-model-answer-over-my-training-data-its-posible-or-do-i-need-use-embeddings-based-search/717602#post_3</guid>
      <pubDate>Mon, 15 Apr 2024 18:17:25 GMT</pubDate>
    </item>
    <item>
      <title>BatchAPI 现已推出</title>
      <link>https://community.openai.com/t/batchapi-is-now-available/718416#post_4</link>
      <description><![CDATA[对 BatchAPI 的发布表示敬意！
此 API 的请求数量、令牌或输入文件大小是否有上限？
我非常兴奋能够对此进行测试，并且迫不及待地希望它也能进入嵌入端点。]]></description>
      <guid>https://community.openai.com/t/batchapi-is-now-available/718416#post_4</guid>
      <pubDate>Mon, 15 Apr 2024 18:11:33 GMT</pubDate>
    </item>
    <item>
      <title>助手 API 多助手代理工作流程</title>
      <link>https://community.openai.com/t/assistants-api-multi-assistant-agentic-workflow/707742#post_13</link>
      <description><![CDATA[将我的示例视为助手的一种“hello world”。我故意保持简单。在这种情况下，我将“作家”和“评论家”视为同行，因此子助手和多线程的概念确实不适用，但对于更复杂的现实世界示例，你是对的。在没有人工智能的世界中，问题是否可以通过让一小群“专家”进入一个房间来解决，或者该解决方案是否需要一个更大的团队，其中小组进行分组讨论，然后报告回来进行进一步讨论，直到达成解决方案？助理/代理要求我们考虑我们需要什么样的专业知识，以及解决问题的团队结构。]]></description>
      <guid>https://community.openai.com/t/assistants-api-multi-assistant-agentic-workflow/707742#post_13</guid>
      <pubDate>Mon, 15 Apr 2024 17:56:39 GMT</pubDate>
    </item>
    <item>
      <title>如何使用多个向量存储</title>
      <link>https://community.openai.com/t/how-to-use-multiple-vector-stores/680207#post_10</link>
      <description><![CDATA[你解决了吗？我也遇到类似的问题来解决您开始讨论的问题，即将查询路由到正确的索引]]></description>
      <guid>https://community.openai.com/t/how-to-use-multiple-vector-stores/680207#post_10</guid>
      <pubDate>Mon, 15 Apr 2024 17:54:43 GMT</pubDate>
    </item>
    <item>
      <title>流媒体现已在 Assistant API 中提供！</title>
      <link>https://community.openai.com/t/streaming-is-now-available-in-the-assistants-api/682011?page=3#post_50</link>
      <description><![CDATA[如何保存此消息历史记录。我以前使用 run.id 来检索，但现在我找不到每次运行的 id。
if Prompt := st.chat_input(&quot;需要什么帮助吗？&quot;):
    # 将用户消息添加到状态并显示在屏幕上
    st.session_state.messages.append({&quot;角色&quot;: &quot;用户&quot;, &quot;内容&quot;: 提示})
    如果提示：
        运行=client.beta.threads.runs.create_and_stream(
                线程_id=线程_id,
                Assistant_id=助理_id,
                型号=“gpt-4-turbo-preview”，
            ）
        作为流运行：
                与 st.chat_message(“助理”)：
                    响应 = st.write_stream(stream.text_deltas)
                    流.until_done()
    与 st.chat_message(“用户”)：
        st.markdown（提示）
]]></description>
      <guid>https://community.openai.com/t/streaming-is-now-available-in-the-assistants-api/682011?page=3#post_50</guid>
      <pubDate>Mon, 15 Apr 2024 17:45:58 GMT</pubDate>
    </item>
    </channel>
</rss>