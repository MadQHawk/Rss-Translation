<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>OpenAI 开发者论坛 - 最新帖子</title>
    <link>https://community.openai.com</link>
    <description>最新帖子</description>
    <lastBuildDate>Mon, 08 Apr 2024 06:23:43 GMT</lastBuildDate>
    <item>
      <title>GPT4无法准确理解简单逻辑</title>
      <link>https://community.openai.com/t/gpt4-can-not-accurately-understand-simple-logic/710346#post_14</link>
      <description><![CDATA[我可以理解我的提示并不总是有效的根本原因。非常感谢]]></description>
      <guid>https://community.openai.com/t/gpt4-can-not-accurately-understand-simple-logic/710346#post_14</guid>
      <pubDate>Mon, 08 Apr 2024 06:20:46 GMT</pubDate>
    </item>
    <item>
      <title>GPT4无法准确理解简单逻辑</title>
      <link>https://community.openai.com/t/gpt4-can-not-accurately-understand-simple-logic/710346#post_13</link>
      <description><![CDATA[您在这里遇到的基本问题是：

语言推理是基于概率的，而不是基于逻辑的，来自语言训练；
人工智能没有任何看不见的内部思维或处理，它只是在反映之前看到的所有文本后生成下一个语言标记，一次一个标记；
AI 不会有意识地计算或比较：一个令牌只是变得比另一个令牌更有可能，然后仍然根据令牌的可能性以随机概率对其进行采样。

你可以通过列出人工智能必须做的一些逐步“思考”来增加人工智能通过对话解决问题的机会，首先指示在开始回答之前写一些初步答案。最终结论。
如果您需要人工智能进行计算，您可能希望为其提供一个可以进行数学运算的外部工具，或者运行人工智能编写的 Python 代码的工具。
如果您的任务只是一个可以编码的流程，您可以使用人工智能来解决问题，并推荐永久性编码解决方案来重新处理您要发送的数据以进行基于逻辑的操作。
人工智能起作用的原因是人类是愚蠢的：我可以写出这个回复的一千种变体，这些变体会被理解，并且看起来来自一个有理解力的实体​​；然而，让我做“数学”，只有一个正确答案。]]></description>
      <guid>https://community.openai.com/t/gpt4-can-not-accurately-understand-simple-logic/710346#post_13</guid>
      <pubDate>Mon, 08 Apr 2024 06:17:51 GMT</pubDate>
    </item>
    <item>
      <title>在一个线程的上下文中应该创建多少次运行？</title>
      <link>https://community.openai.com/t/how-many-runs-should-be-created-in-a-context-of-one-thread/710178#post_4</link>
      <description><![CDATA[是的，在进行 API 调用以创建一个线程（当您收到其 ID 时将其作为聊天与您自己的客户关联）之后，您可以进行新的 API 调用，将消息放入线程中并等待其成功另外，您还必须对“run”进行另一个 API 调用，以将线程 id 连接到助手 id，并设置后端查询 AI 模型的过程开始运行，然后等待并继续调用更多轮询 API 调用尝试找出助手正在做什么，或者打开 SSE 订阅并等待推送数据块，然后找出是否应该显示它们，或者 AI 是否尝试使用您的代码调用工具而不是使用其自身内部的工具已从您的观察中过滤掉的代码。
不要对用户输入“运行”两次，否则您要么得到一个已被管理锁定的线程并出现错误，要么您执行了另一个将再次生成的人工智能推理，试图找出新的输出它将在助手发出最后一条消息后发出。
或者您可以只发送消息以完成聊天，并在生成令牌后立即获取响应。]]></description>
      <guid>https://community.openai.com/t/how-many-runs-should-be-created-in-a-context-of-one-thread/710178#post_4</guid>
      <pubDate>Mon, 08 Apr 2024 06:03:33 GMT</pubDate>
    </item>
    <item>
      <title>Open AI Assistant中上下文窗口的大小是多少个token？</title>
      <link>https://community.openai.com/t/how-many-tokens-is-the-size-of-the-context-window-in-open-ai-assistant/710293#post_6</link>
      <description><![CDATA[使用助手时，您将所有管理工作委托给 OpenAI。您可以而且必须不断向线程添加消息，但在实际运行时，您不知道将使用什么阈值，并且您无法编辑、更改或替换消息（以及看不见的工具历史记录）， OpenAI 故意禁用了一种至少可以删除旧消息的方法。
原因 #160 为什么 Google 助理不适合任何会编码的人（也就是说，如果 Google 助理不需要更多代码的话）。]]></description>
      <guid>https://community.openai.com/t/how-many-tokens-is-the-size-of-the-context-window-in-open-ai-assistant/710293#post_6</guid>
      <pubDate>Mon, 08 Apr 2024 05:55:05 GMT</pubDate>
    </item>
    <item>
      <title>聊天主题历史记录消失</title>
      <link>https://community.openai.com/t/chats-topics-history-disappeared/710442#post_1</link>
      <description><![CDATA[（主题已被作者删除）]]></description>
      <guid>https://community.openai.com/t/chats-topics-history-disappeared/710442#post_1</guid>
      <pubDate>Mon, 08 Apr 2024 05:46:45 GMT</pubDate>
    </item>
    <item>
      <title>Open AI Assistant中上下文窗口的大小是多少个token？</title>
      <link>https://community.openai.com/t/how-many-tokens-is-the-size-of-the-context-window-in-open-ai-assistant/710293#post_5</link>
      <description><![CDATA[是的，我说的是助手。是否有标准的做法来确保旧消息不会丢失？重新注入摘要？]]></description>
      <guid>https://community.openai.com/t/how-many-tokens-is-the-size-of-the-context-window-in-open-ai-assistant/710293#post_5</guid>
      <pubDate>Mon, 08 Apr 2024 05:39:58 GMT</pubDate>
    </item>
    <item>
      <title>Open AI Assistant中上下文窗口的大小是多少个token？</title>
      <link>https://community.openai.com/t/how-many-tokens-is-the-size-of-the-context-window-in-open-ai-assistant/710293#post_4</link>
      <description><![CDATA[如果在聊天完成时，您为模型发送了太大的输入（以及使用 max_tokens 保留的输出），您只会收到错误。因此，您必须自己进行令牌计数，并决定自己的技术和预算来限制聊天大小。
助手会简单地放弃旧的聊天……并确保您在每次 API 调用上都花费最大的费用。]]></description>
      <guid>https://community.openai.com/t/how-many-tokens-is-the-size-of-the-context-window-in-open-ai-assistant/710293#post_4</guid>
      <pubDate>Mon, 08 Apr 2024 05:37:47 GMT</pubDate>
    </item>
    <item>
      <title>按回车键不再提交</title>
      <link>https://community.openai.com/t/pressing-enter-no-longer-submits/52333?page=2#post_38</link>
      <description><![CDATA[这个脚本对我有用。我修改了 Chris20 的脚本，这样只有按 Enter 才会发送提示。 Shift 或 Alt + Enter 将不会发送提示。
有关其他上下文，我的环境：

Windows 11
边缘

// ==用户脚本==
// @name CHATGPT 输入窗口调整大小修复
// @命名空间 https://chat.openai.com/chat
// @版本1
// @description 即使在 chatgpt 上调整窗口大小也按 Enter 键
// @作者米格尔
// @match https://chat.openai.com/*
// @icon https://www.google.com/s2/favicons?sz=64&amp;domain=greasyfork.org
// @授予无
// ==/用户脚本==

// 谢谢克里斯20
（功能 （） {
    &#39;使用严格&#39;；
    让调整大小；
    console.log(“正在运行调整大小修复脚本”)

    document.addEventListener(&#39;keydown&#39;, 函数 (事件) {

        if (event.key === &#39;Enter&#39; &amp;&amp; !event.altKey &amp;&amp; !event.shiftKey) {
            event.preventDefault();
            //console.log(&quot;等待...&quot;);
            //让startTime = Performance.now();
            //setTimeout(dispatchSubmit, 1500);
            console.log(&quot;已发送&quot;);
            //console.log(&quot;in&quot;, startTime - Performance.now(), &quot; time&quot;);
        }
    });

    函数dispatchSubmit() {
        const button = document.querySelector(&#39;表单按钮&#39;);
        if (按钮.禁用)
        {
            console.log(&quot;未运行&quot;);
            返回;
        }
        const rect = button.getBoundingClientRect();
        const x = 矩形左 + (矩形宽度 / 2);
        const y = 矩形顶部 + (矩形高度 / 2);
        const clickEvent = new MouseEvent(&#39;点击&#39;, {
            景观：窗外，
            气泡：真实，
            可取消：真，
            客户端X：x，
            客户Y: y
        });

        按钮.dispatchEvent(clickEvent);

    }
})();
]]></description>
      <guid>https://community.openai.com/t/pressing-enter-no-longer-submits/52333?page=2#post_38</guid>
      <pubDate>Mon, 08 Apr 2024 05:32:07 GMT</pubDate>
    </item>
    <item>
      <title>在一个线程的上下文中应该创建多少次运行？</title>
      <link>https://community.openai.com/t/how-many-runs-should-be-created-in-a-context-of-one-thread/710178#post_3</link>
      <description><![CDATA[在 API 助手中，应该创建一个名为“run”的东西，以便在发送问题后从模型获取响应，所以我问是否必须在每个问题发送到模型后创建一个新的运行（消息添加到线程）以获得响应？或]]></description>
      <guid>https://community.openai.com/t/how-many-runs-should-be-created-in-a-context-of-one-thread/710178#post_3</guid>
      <pubDate>Mon, 08 Apr 2024 05:24:41 GMT</pubDate>
    </item>
    </channel>
</rss>