<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>OpenAI 开发者论坛 - 最新帖子</title>
    <link>https://community.openai.com</link>
    <description>最新帖子</description>
    <lastBuildDate>Sun, 21 Apr 2024 06:23:25 GMT</lastBuildDate>
    <item>
      <title>提出改变游戏规则的策略——OpenAI 的下一步行动</title>
      <link>https://community.openai.com/t/proposing-a-game-changing-strategy-openais-next-move/723507#post_4</link>
      <description><![CDATA[


_j：
&lt;块引用&gt;
微软利用 OpenAI 技术


作为我们自己的 GPT 的构建者，微软对 OpenAI 技术的使用并不关心我们。我们有独特的愿景，可以在人工智能模型和竞争公司的拥挤领域中开辟出一条独特的道路。
我们需要的只是相信自己，相信技术，并付出努力。微软作为一个庞大的实体，无法像我们一样迅速行动。想想大型网站需要多长时间才能利用谷歌的变化——即使是谷歌流量的一小部分，也有聪明的方法可以利用。我不会坐在这里感叹微软、Meta 或“七巨头”。
我们有自己的优势，例如敏捷性和创造力。这些大公司需要花费大量时间来做出决策，并且都因经济衰退而受到削弱。]]></description>
      <guid>https://community.openai.com/t/proposing-a-game-changing-strategy-openais-next-move/723507#post_4</guid>
      <pubDate>Sun, 21 Apr 2024 06:11:02 GMT</pubDate>
    </item>
    <item>
      <title>搜索文件时与矢量存储选项混淆</title>
      <link>https://community.openai.com/t/confusion-with-the-vector-storage-option-when-searching-for-files/721083#post_13</link>
      <description><![CDATA[我发现当温度较低时（比如0左右），价格几乎和你把所有数据放入辅助指令中一样。但是当你增加温度（例如至少使其为1）时，它会变小几倍（在我的例子中大约是10倍，但我只使用140行的文件，这是相当小的，我想更大的文件优势更多显着）。]]></description>
      <guid>https://community.openai.com/t/confusion-with-the-vector-storage-option-when-searching-for-files/721083#post_13</guid>
      <pubDate>Sun, 21 Apr 2024 05:55:03 GMT</pubDate>
    </item>
    <item>
      <title>提出改变游戏规则的策略——OpenAI 的下一步行动</title>
      <link>https://community.openai.com/t/proposing-a-game-changing-strategy-openais-next-move/723507#post_3</link>
      <description><![CDATA[&lt;块引用&gt;
TechTitan 建议 OpenAI 应利用其自定义 GPT 来满足广泛的特定需求用户，而不是提供对 ChatGPT 的一般访问。 TechTitan 提议与谷歌或微软建立战略合作伙伴关系，设想通过展示广告产生收入，覆盖计算费用并吸引更多用户。在随后的帖子中，TechTitan 看到了投资 Nvidia H100 GPU 的潜力，并强调了利用下降的机会Google 最新更新后的网络流量。作为 API 构建者面临的成本解决方案，他们建议与 OpenAI 直接合作可以抵消对广告收入的依赖。
用AI总结

是人工智能还是只是人们现在将一切称为“游戏规则改变者”......
也许您不知道微软利用 OpenAI 技术？
Microsoft Copilot GPT Builder 概述
Microsoft 有 GPT，并且有按月订阅套餐。微软制定了 Copilot AI 产品战略，以迫使更多操作系统内帐户连接到其围墙花园应用商店、其他订阅和跨平台个性化广告。]]></description>
      <guid>https://community.openai.com/t/proposing-a-game-changing-strategy-openais-next-move/723507#post_3</guid>
      <pubDate>Sun, 21 Apr 2024 05:46:28 GMT</pubDate>
    </item>
    <item>
      <title>在函数调用中，我可以将对象传递给函数吗？</title>
      <link>https://community.openai.com/t/on-function-calling-can-i-pass-a-object-to-a-funtion/723599#post_1</link>
      <description><![CDATA[车型：
    def __init__(自身、名称、型号):
        self.name = 姓名
        self.model = 模型

    def makeound(自身):
        return print(f&quot;汽车 {self.name} {self.model} 发出声音&quot;)

    def __str__(自身):
        return f&quot;{self.name} {self.model}&quot;

    def to_dict(自我):
        返回 {&quot;name&quot;: self.name, &quot;model&quot;: self.model}


def make_car(名称,型号):
    汽车=汽车（名称，型号）
    还车

def make_sound（汽车：汽车）：
    还车+“发出声音 pwweeee”

main.py
def run_conversation(user_prompt):
    消息 = [
        {
            “角色”：“系统”，
            “内容”： ”””
                您是一个调用 LLM 的函数，它可以调用 make_car 函数来制造具有给定名称和型号的汽车，并返回汽车对象。
            &quot;&quot;&quot;,
        },
        {
            “角色”：“用户”，
            “内容”：用户提示，
        },
    ]
    工具=[
        {
            “类型”：“功能”，
            “功能”： {
                “名称”：“make_car”，
                &quot;description&quot;: &quot;用给定的名称和型号制作一个汽车对象&quot;,
                “参数”： {
                    “类型”：“对象”，
                    “特性”： {
                        “姓名”： {
                            “类型”：“字符串”，
                            &quot;description&quot;: &quot;汽车的名称（例如：&#39;大众汽车&#39;）&quot;,
                        },
                        “模型”： {
                            “类型”：“字符串”，
                            &quot;description&quot;: &quot;汽车的型号（例如：&#39;Vento&#39;、&#39;Polo&#39; 等）&quot;,
                        },
                    },
                    “必填”：[“名称”，“型号”]，
                },
            },
        },
        {
            “类型”：“功能”，
            “功能”： {
                “名称”：“make_sound”，
                &quot;description&quot;: &quot;让汽车发出声音&quot;,
                “参数”： {
                    “类型”：“对象”，
                    “特性”： {
                        “车”： {
                            “类型”：“对象”，
                            &quot;description&quot;: &quot;发出声音的汽车对象（例如：make_car函数将返回汽车对象）&quot;,
                        },
                    },
                    “必需”：[“汽车”]，
                },
            },
        },
    ]

    响应 = client.chat.completions.create(
        型号=型号，
        消息=消息，
        工具=工具，
        tool_choice =“自动”，
        最大令牌=4096，
    ）

    response_message = response.choices[0].message
    工具调用 = 响应消息.工具调用
    如果工具调用：
        可用功能 = {
            “make_car”：make_car，
            “make_sound”：make_sound，
        }
        messages.append(response_message)
        对于 tool_calls 中的 tool_call：
            函数名称 = 工具调用.函数.名称
            function_to_call = available_functions[函数名称]
            function_args = json.loads(tool_call.function.arguments)
            如果函数名==“make_car”：
                函数响应 = 函数调用（
                    名称=function_args.get(&quot;名称&quot;),
                    model=function_args.get(&quot;模型&quot;),
                ）
            elif function_name == &quot;make_sound&quot;:
                函数响应 = 函数调用（
                    汽车=function_args.get(“汽车”),
                ）
            消息.append(
                {
                    “tool_call_id”：tool_call.id，
                    “角色”：“工具”，
                    “名称”：函数名称，
                    “内容”：函数响应
                }
            ）
        Second_response = client.chat.completions.create(
            模型=模型，消息=消息
        ）
        返回 Second_response.choices[0].message


user_prompt =“制作一辆名为“Volkswagen”的汽车并建模任何型号也能发出声音”
打印（运行对话（用户提示））

有什么方法可以将汽车对象传递给 make_sound 函数吗？]]></description>
      <guid>https://community.openai.com/t/on-function-calling-can-i-pass-a-object-to-a-funtion/723599#post_1</guid>
      <pubDate>Sun, 21 Apr 2024 05:44:13 GMT</pubDate>
    </item>
    <item>
      <title>搜索文件时与矢量存储选项混淆</title>
      <link>https://community.openai.com/t/confusion-with-the-vector-storage-option-when-searching-for-files/721083#post_12</link>
      <description><![CDATA[通过



姆博内特：
&lt;块引用&gt;
使用它的唯一方法是在提示中强制使用它。所以我希望这是一个暂时的故障。


我可以通过这样的辅助指令强制使用向量吗：
&lt;块引用&gt;
说明
您是一名助理，负责回答用户有关产品/服务的问题。 在回答用户问题时，您仅严格依赖附件中提供的信息。您绝不会发明任何信息。如果无法通过现有信息回答查询，您可以回答：我不知道。
]]></description>
      <guid>https://community.openai.com/t/confusion-with-the-vector-storage-option-when-searching-for-files/721083#post_12</guid>
      <pubDate>Sun, 21 Apr 2024 05:35:51 GMT</pubDate>
    </item>
    </channel>
</rss>