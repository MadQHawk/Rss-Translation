<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>OpenAI 开发者论坛 - 最新帖子</title>
    <link>https://community.openai.com</link>
    <description>最新帖子</description>
    <lastBuildDate>Sat, 06 Jul 2024 18:25:06 GMT</lastBuildDate>
    <item>
      <title>记忆系统改进：保存可命名的……例如一个函数（有名称）或一个运算符（有名称）到记忆系统的向量文件中……（这将在会话之间持续存在。）</title>
      <link>https://community.openai.com/t/memory-system-improvement-save-nameable-for-example-a-function-has-name-or-an-operator-has-name-to-a-vector-file-for-memory-system-that-would-persist-between-sessions/856324#post_1</link>
      <description><![CDATA[标题可能有点令人困惑，但基本上，内存系统是如何设置的，它是如何保存 1 行内存的，这非常棒，所以下一步我要做的是因为你的矢量文件搜索非常棒
我会在聊天 GPT 中自动实现这一点，所以每次我添加一个可命名的代码项，比如一个我可以通过名称引用的函数或一个我可以通过名称引用的运算符，你知道任何可命名的代码我都使用 python，我不知道其他编程语言有什么，但这两个基本上是可命名的项目，你可以继续使用类型，但对于初学者来说，如果你这样做（这实际上可能会取代或应该取代内存系统）每当用户在他们的请求中引用函数名称或运算符名称时……我会让一个在超高速服务器上运行的后台助手查找该函数，然后将该函数或运算符添加到该请求的助手内存中，因此，该函数或运算符内容的内存基本上会立即提供作为示例，如果你将这些文件限制在 7 兆字节左右，你就知道每个函数或运算符以 JSON 格式放在单独的行上，那么访问它会非常快，特别是如果你确实从更好的服务器或超快服务器运行此功能，这样每当我向助手提到有关函数或运算符的内容时，他们就会立即知道我在说什么以及函数或运算符的内容……
我知道人们喜欢语音输入他们的用户请求，所以你可以在你的文档中指导人们，甚至可以在你的网络界面上直接制作一个打印语句，当他们引用一个函数和语音输入时，他们需要通过语音输入来引用它，例如打印 _variable _function，所以实际的语音输入将是“打印下划线变量下划线函数”然后你聊天 GPT 代码中的另一个助手可能会寻找任何下划线，如果它找到一个可能有下划线分隔的单词，比如可能有空格，就像 Windows 语音输入有时发生的那样，当你告诉它在单词和 _ 之间打印一个 _ 或 _ 在函数名称的下一个单词中，那么它会找到这些并修复它们，就像它做语音一样键入错误...
这将是一个很棒的入门方法，可以在所有会话之间以更好的方式保存历史记录，因为记忆将链接到关键字...例如函数名称，当提供这样的关键字时，代表该关键字的项目将被发送到助手的内存中以供该会话使用...您还可以保存家庭主妇的食谱名称，例如，如果有人在做通心粉和奶酪烘焙，那么记忆系统可以创建一个名为通心粉和奶酪烘焙的关键字，将整个食谱链接到它，然后在该人的未来搜索该参考...请求...您还可以进入下一步并在后台添加功能，例如您可以告诉助手将其专门保存到内存中，您可以说将整个请求链接到关键字，甚至可以提供选项来具体说明将我提供的所有代码，甚至任何函数或运算符之外的代码链接到此关键字...然后它非常简单，它是自动的，但它也可以像您的记忆系统一样调用。]]></description>
      <guid>https://community.openai.com/t/memory-system-improvement-save-nameable-for-example-a-function-has-name-or-an-operator-has-name-to-a-vector-file-for-memory-system-that-would-persist-between-sessions/856324#post_1</guid>
      <pubDate>Sat, 06 Jul 2024 18:21:52 GMT</pubDate>
    </item>
    <item>
      <title>无法在浏览器中使用，也无法在移动设备上在线使用，</title>
      <link>https://community.openai.com/t/doesnt-work-in-browser-online-on-mobile/856305#post_1</link>
      <description><![CDATA[如果我输入提示并按发送，我的浏览器中什么都没有发生，我试过 Firefox Chrome 和 Brave。但它在我的 Android 上运行良好
我试图访问这个网站
https://help.openai.com/en/articles/6614161-how-can-i-contact-support
然后点击左下角的聊天图标，它开始打开我猜想的聊天支持服务，但半秒钟后它就消失了，这种情况在 Chrome 和 Brave 中都会发生
这已经是一个问题 3-4 天了]]></description>
      <guid>https://community.openai.com/t/doesnt-work-in-browser-online-on-mobile/856305#post_1</guid>
      <pubDate>Sat, 06 Jul 2024 18:07:32 GMT</pubDate>
    </item>
    <item>
      <title>寻求有关使用文件搜索助手降低 RAG 聊天机器人成本的建议</title>
      <link>https://community.openai.com/t/seeking-advice-on-reducing-costs-for-rag-chatbot-using-file-search-assistant/855561#post_5</link>
      <description><![CDATA[


 hussein.a.abusetta:

第一个用户查询中的输入标记是否由指令、检索到的块和用户查询组成？


使用助手时，您可以提供直接放置在上下文窗口中的指令和附加指令。您还可以发送您自己的可调用函数的规范。
OpenAI 以特殊语言添加您的函数指令。他们还添加了自己的工具，这些工具是有关如何使用文件搜索、如何使用代码解释器、如何发出并行工具调用的大型指令块。
当运行用户输入消息时，还会添加线程的过去聊天记录。AI 被置于一个循环中，只有在直接响应用户时才会退出。它的类似代理的行为开始起作用，根据用户输入，它可以调用函数、接收响应、调用工具、接收响应，每个 AI 输出和响应都会以内部步骤添加到线程中。
因此，您可以看到 AI 调用的文件搜索立即导致在线程中添加了 15000 个文档块标记。然后，代理后端继续发送附加的消息和上下文，以查看 AI 接下来要做什么。当 AI 编写的代码返回错误、搜索不令人满意时，AI 可以重试，只能通过（希望）AI 行为终止。
AI 重试消耗 10000、20000、30000 个令牌，因为无用的文件搜索结果会添加到未遵循的指令中：

您需要以输入和输出令牌的形式支付此半自动工具进行的 AI 模型调用费用。文件搜索工具不关心搜索的相关性，它仍会增加块计数。
如果您关心预算和专业化，那么聊天完成就是您构建自己的解决方案的地方，无需“工具”或迭代调用。]]></description>
      <guid>https://community.openai.com/t/seeking-advice-on-reducing-costs-for-rag-chatbot-using-file-search-assistant/855561#post_5</guid>
      <pubDate>Sat, 06 Jul 2024 17:51:58 GMT</pubDate>
    </item>
    <item>
      <title>最近有没有人觉得 ChatGPT 4o 对其他人来说变得越来越“愚蠢”了？</title>
      <link>https://community.openai.com/t/did-chatgpt-4o-get-progressively-dumber-for-anyone-else-lately/846498#post_14</link>
      <description><![CDATA[直到几天前，它还过得去（尽管输出结果比 Claude 差）。现在 GPT-4o 完全无法使用，忽略大多数指令，每次都很懒惰。看起来质量下降相当厉害。]]></description>
      <guid>https://community.openai.com/t/did-chatgpt-4o-get-progressively-dumber-for-anyone-else-lately/846498#post_14</guid>
      <pubDate>Sat, 06 Jul 2024 17:47:20 GMT</pubDate>
    </item>
    <item>
      <title>使用 LLM 和线程优化向量存储中问卷调查的令牌使用情况</title>
      <link>https://community.openai.com/t/optimizing-token-usage-for-a-questionnaire-in-a-vector-store-using-llm-and-threads/856188#post_6</link>
      <description><![CDATA[但问题是问卷调查部署在 API 上非常复杂。我在某种程度上需要法学硕士学位。你确定没有其他方法可以减少输入令牌数量吗？]]></description>
      <guid>https://community.openai.com/t/optimizing-token-usage-for-a-questionnaire-in-a-vector-store-using-llm-and-threads/856188#post_6</guid>
      <pubDate>Sat, 06 Jul 2024 17:43:32 GMT</pubDate>
    </item>
    <item>
      <title>我可以在不使用提供的 SDK 的情况下调用 OpenAI Assistants API 吗？</title>
      <link>https://community.openai.com/t/can-i-call-openai-assistants-apis-without-using-the-provided-sdks/856249#post_2</link>
      <description><![CDATA[当然可以。大多数端点发送和接收 RESTful API JSON 对象，而其他端点接收 multipart/form-data 或返回二进制块 http 流。
API 参考中有可在代码示例上方选择的 CURL 示例，显示了发送直接请求的方法和内容。]]></description>
      <guid>https://community.openai.com/t/can-i-call-openai-assistants-apis-without-using-the-provided-sdks/856249#post_2</guid>
      <pubDate>Sat, 06 Jul 2024 17:29:35 GMT</pubDate>
    </item>
    <item>
      <title>以编程方式创建 API 密钥</title>
      <link>https://community.openai.com/t/programmatically-create-api-keys/586931#post_11</link>
      <description><![CDATA[
OpenAI 希望开发人员通过开发人员控制的服务器路由其用户流量

那么 openai 对开发人员在 openai 平台上构建可扩展应用程序不感兴趣？
您的平台只有一个应用程序凭据工作流程：单击控制台并复制秘密字符串。这意味着，在最基本的层面上，openai 不提供集成来管理外部应用程序的甚至基本权限。
而应用程序用户身份的凭据则完全不存在。]]></description>
      <guid>https://community.openai.com/t/programmatically-create-api-keys/586931#post_11</guid>
      <pubDate>Sat, 06 Jul 2024 17:28:26 GMT</pubDate>
    </item>
    <item>
      <title>寻求有关使用文件搜索助手降低 RAG 聊天机器人成本的建议</title>
      <link>https://community.openai.com/t/seeking-advice-on-reducing-costs-for-rag-chatbot-using-file-search-assistant/855561#post_4</link>
      <description><![CDATA[感谢您的回复。
我需要帮助澄清一些关于文件搜索如何工作的要点，这将有助于降低成本。我几乎阅读了所有的文档。
事实上，我的助手将处理阿拉伯语的用户查询和响应，与英语相比，阿拉伯语的标记成本更高。阿拉伯语语句的标记量大约是英语的三倍，但长度和含义相同。

第一个用户查询中的输入标记是否由说明、检索到的块和用户查询组成？
对于后续用户查询，输入标记是否由说明（仅一次）、检索到的块（不包括来自先前查询的块）、先前的用户查询及其助手响应以及新用户查询组成？
检索相似块的过程是否会产生任何成本？我认为不是，只有存储向量存储的成本。
如果多个助手在同一个线程中工作，所有助手的指令是否都包含在输入令牌中，还是仅包含在所选助手的指令中（我希望是后者）？
指示助手在其响应末尾包含 JSON 是否可靠？响应将包含用户的答案和一些额外的 JSON 数据。

感谢您的帮助！]]></description>
      <guid>https://community.openai.com/t/seeking-advice-on-reducing-costs-for-rag-chatbot-using-file-search-assistant/855561#post_4</guid>
      <pubDate>Sat, 06 Jul 2024 17:26:43 GMT</pubDate>
    </item>
    <item>
      <title>使用plus版预付费方式</title>
      <link>https://community.openai.com/t/using-the-plus-version-pre-pay-way/856260#post_1</link>
      <description><![CDATA[大家好，我正在使用 chatgpt 为我创建文章。我使用了即用即付选项并充值了 10 美元。当我使用 chatgpt 时，它只提供 3.5 版本，而不是 plus 版本。我是否必须等待帐户同步，还是我应该做其他事情？提前谢谢]]></description>
      <guid>https://community.openai.com/t/using-the-plus-version-pre-pay-way/856260#post_1</guid>
      <pubDate>Sat, 06 Jul 2024 17:14:37 GMT</pubDate>
    </item>
    <item>
      <title>我可以在不使用提供的 SDK 的情况下调用 OpenAI Assistants API 吗？</title>
      <link>https://community.openai.com/t/can-i-call-openai-assistants-apis-without-using-the-provided-sdks/856249#post_1</link>
      <description><![CDATA[我可以不使用提供的 SDK 来调用 OpenAI Assistants API 吗？
我想通过“手动”调用 API 来执行我的文件搜索助手，而不使用 OpenAI SDK。
谢谢]]></description>
      <guid>https://community.openai.com/t/can-i-call-openai-assistants-apis-without-using-the-provided-sdks/856249#post_1</guid>
      <pubDate>Sat, 06 Jul 2024 17:06:27 GMT</pubDate>
    </item>
    <item>
      <title>“消息”：“已达到计费硬限制”，</title>
      <link>https://community.openai.com/t/message-billing-hard-limit-has-been-reached/856238#post_1</link>
      <description><![CDATA[当我尝试通过 Java Spring 使用它时，我收到此消息。
但是，即使我免费试用 - 我从未使用过该 API。
我在使用说明中看到此信息：




TIER
QUALIFICATION
USAGE LIMITS




免费
用户必须位于允许的地理位置
每月 100 美元



所以基本上我应该能够使用该网站，即使它是免费的，不是吗？]]></description>
      <guid>https://community.openai.com/t/message-billing-hard-limit-has-been-reached/856238#post_1</guid>
      <pubDate>Sat, 06 Jul 2024 16:55:24 GMT</pubDate>
    </item>
    <item>
      <title>使用 LLM 和线程优化向量存储中问卷调查的令牌使用情况</title>
      <link>https://community.openai.com/t/optimizing-token-usage-for-a-questionnaire-in-a-vector-store-using-llm-and-threads/856188#post_5</link>
      <description><![CDATA[这是个好主意！
然后您可以将这些答案存储到用户个人资料中以供日后使用。]]></description>
      <guid>https://community.openai.com/t/optimizing-token-usage-for-a-questionnaire-in-a-vector-store-using-llm-and-threads/856188#post_5</guid>
      <pubDate>Sat, 06 Jul 2024 16:11:21 GMT</pubDate>
    </item>
    <item>
      <title>如何消除 Google 助理回复中的无用内容</title>
      <link>https://community.openai.com/t/how-to-eliminate-useless-content-in-the-assistant-response/855634#post_2</link>
      <description><![CDATA[如果你拒绝向助手提供任何信息，你怎么能指望它保持连贯性呢？
想象一下，你和我正在通过文本进行对话，但无论我们输入多少，对方都只能看到我们写的最后一句话。
对话很快就会脱轨。]]></description>
      <guid>https://community.openai.com/t/how-to-eliminate-useless-content-in-the-assistant-response/855634#post_2</guid>
      <pubDate>Sat, 06 Jul 2024 16:07:23 GMT</pubDate>
    </item>
    <item>
      <title>我可以通过 http 请求向助手发送消息吗？</title>
      <link>https://community.openai.com/t/can-i-message-an-assistant-through-http-requests/856192#post_2</link>
      <description><![CDATA[听起来不太粗鲁，但无论您使用什么平台，这都是非常基本的。
教程和文档随处可见。花时间阅读所有文档，这些答案都应该非常明显。因为，根据你所说的，我们（不完全了解你在做什么）的答案是：视情况而定
https://platform.openai.com/docs/assistants/overview]]></description>
      <guid>https://community.openai.com/t/can-i-message-an-assistant-through-http-requests/856192#post_2</guid>
      <pubDate>Sat, 06 Jul 2024 16:02:56 GMT</pubDate>
    </item>
    <item>
      <title>使用 LLM 和线程优化向量存储中问卷调查的令牌使用情况</title>
      <link>https://community.openai.com/t/optimizing-token-usage-for-a-questionnaire-in-a-vector-store-using-llm-and-threads/856188#post_4</link>
      <description><![CDATA[是的。这需要付出更多努力，但如果您的目标是省钱并拥有更多控制权，那么这可能是一个不错的选择。
您可以将两者结合使用。]]></description>
      <guid>https://community.openai.com/t/optimizing-token-usage-for-a-questionnaire-in-a-vector-store-using-llm-and-threads/856188#post_4</guid>
      <pubDate>Sat, 06 Jul 2024 16:01:34 GMT</pubDate>
    </item>
    </channel>
</rss>